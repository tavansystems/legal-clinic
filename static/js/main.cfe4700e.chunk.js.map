{"version":3,"sources":["utils/LangContext.js","utils/PathContext.js","utils/SupportedLanguages.js","views/components/LanguageSelector.jsx","views/components/Footer.jsx","utils/NavigatorOptions.js","views/components/SearchResultList.jsx","views/components/SearchBar.jsx","views/components/Header.jsx","views/layouts/MainLayout.jsx","views/components/Cards.jsx","views/components/SideBarLinks.jsx","views/components/ContentCard.jsx","views/components/ContentWrapper.jsx","views/components/BreadCrumbs.jsx","views/components/HeroUnit.jsx","views/pages/Navigator.jsx","views/components/LandingHeroUnit.jsx","views/components/LangCards.jsx","views/pages/Home.jsx","views/pages/NotFound.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LangContext","React","createContext","en","lang","path","SupportedLanguages","useStyles","makeStyles","theme","langIcon","fontSize","marginRight","selectOption","display","select","background","inputInput","padding","spacing","border","paddingLeft","transition","transitions","create","width","breakpoints","up","LanguageSelector","classes","slug","useContext","PathContext","Select","labelId","id","value","label","nativeInput","disableUnderline","MenuItem","disabled","default","Typography","className","sourceTitle","style","alignItems","flexWrap","Object","keys","map","to","component","Link","title","footer","backgroundColor","palette","paper","langSelector","fade","borderRadius","shape","margin","common","white","Footer","literals","Grid","container","item","xs","md","variant","align","gutterBottom","app_name","color","disclaimer","copyright","target","href","app_org_link","org_name","Date","getFullYear","developed_by","rel","url","listRoot","position","maxWidth","inline","link","textDecoration","SearchResultList","results","length","List","result","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","content","slice","Divider","defaultProps","optionList","mapOptions","options","key","push","searchIcon","height","pointerEvents","justifyContent","inputRoot","Header","useState","searchValue","setSearchValue","InputBase","onChange","e","placeholder","search","root","input","inputProps","NavigatorOptions","filter","option","searchValLowerCase","toLowerCase","includes","flexGrow","icon","marginLeft","down","minWidth","AppBar","Toolbar","toolbar","noWrap","MainLayout","children","Fragment","CssBaseline","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","Cards","location","checked","setChecked","useEffect","Container","entries","index","sm","Grow","in","timeout","CardActionArea","pathname","Card","CardContent","CardActions","choose","withRouter","main","SideBarLinks","links","Paper","elevation","button","ContentCard","sidebar","column","ContentWrapper","sideBarList","sources","source","cardSize","showGraphic","maxLine","minLine","proxyUrl","marginTop","BreadCrumbs","currentTitle","Breadcrumbs","maxItems","separator","aria-label","home","heroContent","heroButtons","HeroUnit","breadCrumbs","justify","match","module","setModule","setBreadCrumbs","notFound","setNotFound","selectedLang","setSelectedLang","sideBarListState","setSideBarListState","params","parsePath","useCallback","pathlist","split","currentModule","breadcrumbpath","finalParent","selectLang","Provider","how_can_we_help","welcome","marginBottom","LandingHeroUnit","chooseLang","choose_lang","supportedLangs","LangCards","Home","NotFound","props","App","exact","Navigator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.cfe4700e.chunk.js","sourcesContent":["import React from \"react\";\nimport en from \"../lang/en.json\"\n\nconst LangContext = React.createContext(en);\n\nexport default LangContext;\n","import React from \"react\";\n\nconst LangContext = React.createContext({\n    lang: \"\",\n    path: \"\"\n});\n\nexport default LangContext;\n","import en from \"../lang/en.json\";\n\nconst SupportedLanguages = {\n    en: en\n};\n\nexport default SupportedLanguages;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PublicIcon from '@material-ui/icons/Public';\n\nimport SupportedLanguages from '../../utils/SupportedLanguages';\nimport LangContext from \"../../utils/LangContext\";\nimport PathContext from \"../../utils/PathContext\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    langIcon: {\n        fontSize: \"16px\",\n        marginRight: \"7px\",\n    },\n    selectOption: {\n        display: \"inline\",\n    },\n    select: {\n        '&:focus': {\n            background: \"inherit\"\n        },\n    },\n    inputInput: {\n        padding: theme.spacing(0, 1),\n        border: \"none\",\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '50ch'\n            }\n        }\n    }\n}));\n\nfunction LanguageSelector() {\n    const classes = useStyles()\n    const { slug } = useContext(LangContext)\n    const { lang, path } = useContext(PathContext)\n\n    return (\n        <Select\n            labelId=\"lang-selector\"\n            id=\"lang-selector\"\n            value={lang === \"\" ? \"None\" : slug}\n            label=\"Language\"\n            classes={{ nativeInput: classes.inputInput, select: classes.select }}\n            disableUnderline\n        >\n            <MenuItem value=\"None\" disabled default>\n                <Typography className={classes.sourceTitle} style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexWrap: 'wrap',\n                }}>\n                    <PublicIcon className={classes.langIcon} />\n                    <span>Select Your Language</span>\n                </Typography>\n            </MenuItem>\n            {Object.keys(SupportedLanguages).map(lang => (\n                <MenuItem to={\"/\" + SupportedLanguages[lang].slug + \"/\" + path} component={Link} key={SupportedLanguages[lang].slug} value={SupportedLanguages[lang].slug}>\n                    <Typography className={classes.sourceTitle} style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        flexWrap: 'wrap',\n                    }}>\n                        <PublicIcon className={classes.langIcon} />\n                        <span>                        \n                            {SupportedLanguages[lang].title}\n                        </span>\n                    </Typography>\n                </MenuItem>\n            ))}\n        </Select>\n    )\n}\n\nexport default LanguageSelector\n\n\n","import React, { useContext } from 'react';\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\n\nimport LanguageSelector from \"./LanguageSelector\"\nimport LangContext from \"../../utils/LangContext\"\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6)\n    },\n    langSelector: {\n        backgroundColor: fade(\"#eee\", 0.65),\n        borderRadius: theme.shape.borderRadius,\n        margin: \"20px auto 0\",\n        width: \"fit-content\",\n        padding: theme.spacing(0, 1),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        }\n    },\n}));\n\nexport default function Footer() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <footer className={classes.footer}>\n            <Grid container>\n                <Grid item xs={12} md={4}></Grid>\n                <Grid item xs={12} md={4}>\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        {literals.app_name}\n                    </Typography>\n                    <Typography spacing=\"10\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                        {literals.disclaimer}\n                    </Typography>\n                    <div className={classes.langSelector}>\n                        <LanguageSelector />\n                    </div>\n                    <br />\n                    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                        {literals.copyright} © {' '}\n                        <Link color=\"inherit\" target=\"_BLANK\" href={literals.app_org_link}>\n                            {literals.org_name}\n                        </Link>{' '}\n                        {new Date().getFullYear()}\n                        {'.'}\n                        {literals.developed_by} <Link href=\"https://tavansystems.com\" target=\"_BLANK\" rel=\"noreferrer\">Tavan Systems Inc.</Link>\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={4}></Grid>\n            </Grid>\n        </footer>\n    )\n}","import SupportedLanguages from './SupportedLanguages';\n\nlet url\nconst optionList = []\nconst mapOptions = (options, path = \"/\") => {\n    for (let key in options) {\n        url = (path !== \"/\" ? path : \"\") + \"/\" + key\n        optionList.push({\n            title: options[key].title,\n            path: url,\n            content: options[key].content ? options[key].content : null\n        })\n        if (options[key].options) {\n            mapOptions(options[key].options, url)\n        }\n    }\n    url = \"\"\n}\nmapOptions(SupportedLanguages)\n\nexport default optionList;","\n\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: \"black\"\n    },\n    listRoot: {\n        position: 'absolute',\n        width: '100%',\n        maxWidth: '70ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n    link: {\n        textDecoration: \"none\"\n    }\n}));\n\nexport default function SearchResultList({ results }) {\n    const classes = useStyles();\n\n    if (results.length === 0) {\n        return (<></>)\n    }\n\n    return (\n        <List className={classes.listRoot}>\n            {results.map((result) => (\n                <Link className={classes.link} key={result.path} to={result.path}>\n                    <ListItem alignItems=\"flex-start\">\n\n                        <ListItemAvatar>\n                            <Avatar alt={result.title} src=\"https://via.placeholder.com/265x150.webp\" />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.title}\n                            primary={result.title}\n                            secondary={\n                                <ReactMarkdown>\n                                   {result.content !== null ? result.content.slice(0, 100)+ \"...\" : \"\"}\n                                </ReactMarkdown>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </Link>\n\n            ))}\n        </List>\n    )\n}\n\nSearchResultList.defaultProps = {\n    results: []\n};","\n\nimport React, { useContext, useState } from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LangContext from \"../../utils/LangContext\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport SearchResultList from './SearchResultList';\n\nimport NavigatorOptions from '../../utils/NavigatorOptions';\n\nconst useStyles = makeStyles((theme) => ({\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '50ch',\n            },\n        },\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const [searchValue, setSearchValue] = useState(\"\")\n    const { literals } = useContext(LangContext);\n\n    const optionsFilter = option => {\n        const searchValLowerCase = searchValue.toLowerCase()\n        if(option.content !== null) return option.content.toLowerCase().includes(searchValLowerCase)\n        return option.title.toLowerCase().includes(searchValLowerCase)\n    }\n\n    return (\n        <div>\n            <div className={classes.searchIcon}>\n                <SearchIcon />\n            </div>\n            <InputBase\n                value={searchValue}\n                onChange={(e) => setSearchValue(e.target.value)}\n                placeholder={literals.search + \"…\"}\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n            />\n            {\n                searchValue.length > 0\n                    ? <SearchResultList results={NavigatorOptions.filter(optionsFilter)} />\n                    : <></>\n            }\n        </div>\n    )\n}\n\n\n","import React, { useContext } from 'react';\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\nimport LangContext from \"../../utils/LangContext\";\nimport SearchBar from './SearchBar';\nimport LanguageSelector from \"./LanguageSelector\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    langSelector: {\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        borderRadius: theme.shape.borderRadius,\n        marginLeft: 0,\n        padding: theme.spacing(0, 1),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: \"none\"\n        },\n    },\n    search: {\n        position: 'relative',\n        marginRight: \"10px\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        minWidth: '200px',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    }\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <AppBar position=\"relative\">\n            <Toolbar className={classes.toolbar}>\n                <Gavel className={classes.icon} />\n                <Typography className={classes.title} variant=\"h6\" noWrap>\n                    {literals.app_name}\n                </Typography>\n                <div className={classes.search}>\n                    <SearchBar />\n                </div>\n                <div className={classes.langSelector}>\n                    <LanguageSelector />\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\n\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\nimport Footer from \"../components/Footer\"\nimport Header from \"../components/Header\"\n\n// const useStyles = makeStyles((theme) => ({\n// }));\n\nexport default function MainLayout({children}) {\n  // const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Header />\n      <main>\n        {children}\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport Grow from '@material-ui/core/Grow';\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\",\n    }\n}));\n\nfunction Cards({ options, location }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n    const { literals } = useContext(LangContext);\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    if (options.length === 0) {\n        return <></>;\n    }\n\n    return (\n        <Container\n            key={location.pathname}\n            className={classes.cardGrid}\n            maxWidth=\"md\"\n        >\n            <Grid container spacing={4}>\n                {Object.entries(options).map(([key, option], index) => (\n                    <Grid item key={index} xs={12} sm={6} md={4}>\n                        <Grow in={checked} timeout={1000}>\n                            <CardActionArea className={classes.link} to={location.pathname + \"/\" + key} component={Link}>\n                                <Card className={classes.card}>\n                                    {/* <CardMedia\n                                        className={classes.cardMedia}\n                                        image=\"https://via.placeholder.com/265x150.webp\"\n                                        title=\"Image title\"\n                                    /> */}\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            {option.title}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Typography color=\"primary\" className={classes.choose} component=\"p\">\n                                            {literals.choose}\n                                        </Typography>\n                                    </CardActions>\n                                </Card>\n                            </CardActionArea>\n                        </Grow>\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    );\n}\n\nCards.defaultProps = {\n    options: [],\n};\n\nexport default withRouter(Cards);\n","\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Grow from '@material-ui/core/Grow';\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\"\n    }\n}));\n\nfunction SideBarLinks({ links }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1}>\n                <List>\n                    {links.map(item => (\n                        <Link className={classes.link} to={item.path} key={item.path}>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <LinkIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={item.title}\n                                />\n                            </ListItem>\n                        </Link>\n                    ))}\n                </List>\n            </Paper>\n        </Grow>\n    )\n}\n\nexport default SideBarLinks","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from 'react-markdown';\n\nimport Grow from '@material-ui/core/Grow';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        margin: theme.spacing(0, 0, 5, 0),\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(2),\n        },\n    }\n}));\n\nexport default function ContentCard({ content }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1} className={classes.paper}>\n                <Typography\n                    variant=\"h5\"\n                    color=\"textSecondary\"\n                >\n                    <ReactMarkdown>{content}</ReactMarkdown>\n                </Typography>\n            </Paper>\n        </Grow>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { ReactTinyLink } from 'react-tiny-link'\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Grow from '@material-ui/core/Grow';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PublicIcon from '@material-ui/icons/Public';\n\nimport SideBarLinks from \"./SideBarLinks\"\nimport ContentCard from \"./ContentCard\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(6),\n        [theme.breakpoints.down('sm')]: {\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n        },\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\"\n    },\n    sidebar: {\n        width: \"100%\",\n        padding: theme.spacing(1),\n    },\n    column: {\n        padding: theme.spacing(1),\n    },\n    paper: {\n        margin: theme.spacing(0, 0, 5, 0),\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(2),\n        },\n    },\n    sourceTitle: {\n        padding: theme.spacing(5),\n        color: \"black\"\n    }\n}));\n\nfunction ContentWrapper({ sideBarList, main, sources }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    if (!main) {\n        return (<></>)\n    }\n\n    return (\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\n            <Grid container>\n                <Grid item md={9} className={classes.column}>\n                    <ContentCard content={main} />\n                    <Grow in={checked} timeout={1000}>\n                        <Paper elevation={1} className={classes.paper}>\n                            <Typography variant=\"h5\"\n                                color=\"textSecondary\" className={classes.sourceTitle} style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    flexWrap: 'wrap',\n                                }}>\n                                <PublicIcon style={{ marginRight: \"10px\" }} />\n\n                                <span>Sources</span>\n                            </Typography>\n                            {sources.map((source) => (\n                                <ReactTinyLink\n                                    key={source}\n                                    cardSize=\"small\"\n                                    showGraphic={true}\n                                    maxLine={5}\n                                    minLine={3}\n                                    width={1}\n                                    url={source}\n                                    proxyUrl=\"https://cors.bridged.cc\"\n                                />\n                            ))}\n                        </Paper>\n                    </Grow>\n\n                </Grid>\n                <Grid item md={3} className={classes.sidebar}>\n                    <SideBarLinks links={sideBarList} />\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default ContentWrapper","import React, { useContext} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport LangContext from '../../utils/LangContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main\n  }\n}));\n\n\nexport default function BreadCrumbs({path}) {\n  const classes = useStyles();\n  const { literals } = useContext(LangContext)\n  const currentTitle = path[path.length - 1] ? path[path.length - 1]['title'] : null\n\n  return (\n    <div className={classes.root}>\n      <Breadcrumbs maxItems={4} separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        <Link className={classes.link} color=\"inherit\" to=\"/\">\n          {literals.home}\n        </Link>\n        {\n          currentTitle && path.slice(0, path.length -1).map(link => (\n            <Link className={classes.link} key={link.path} to={link.path}>\n              {link.title}\n            </Link>)\n          )\n        }\n        {\n          currentTitle && <Typography color=\"textPrimary\">{currentTitle}</Typography>\n        }\n      </Breadcrumbs>\n    </div>\n  );\n}\n\nBreadCrumbs.defaultProps = {\n  path: [{}]\n};","import React, { useEffect, useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from '@material-ui/core/Grow';\n\nimport BreadCrumbs from \"./BreadCrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 9),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default function HeroUnit({ title, breadCrumbs }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <Grow in={checked} timeout={1000}>\n\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"md\">\n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            {title}\n          </Typography>\n          {/* <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          DESC. PLACEHOLDER\n        </Typography> */}\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <BreadCrumbs path={breadCrumbs} />\n            </Grid>\n          </div>\n        </Container>\n      </div>\n    </Grow>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport LangContext from \"../../utils/LangContext\";\nimport PathContext from \"../../utils/PathContext\";\nimport MainLayout from '../layouts/MainLayout';\nimport Cards from \"../components/Cards\"\nimport ContentWrapper from \"../components/ContentWrapper\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nimport SupportedLanguages from '../../utils/SupportedLanguages';\n\nfunction Navigator({ location, match }) {\n    const [module, setModule] = useState({})\n    const [breadCrumbs, setBreadCrumbs] = useState([])\n    const [notFound, setNotFound] = useState(false)\n    const [selectedLang, setSelectedLang] = useState(SupportedLanguages.en)\n    const [sideBarListState, setSideBarListState] = useState([])\n    const { path, lang } = match.params\n\n    const parsePath = useCallback(\n        () => {\n            const pathlist = path ? path.split(\"/\") : []\n            const breadCrumbs = []\n            let currentModule = selectedLang\n            let breadcrumbpath = \"/\" + lang\n            const finalParent = pathlist[pathlist.length - 1]\n            for (let slug of pathlist) {\n                if (finalParent === slug) {\n                    let sideBarList = []\n                    for (let key in currentModule.options){\n                        if(finalParent !== key){\n                            sideBarList.push({\n                                title: currentModule.options[key].title,\n                                path: key\n                            })\n                        }\n                    }\n                    setSideBarListState(sideBarList)\n                }\n                if (!currentModule.options) {\n                    break\n                }\n                if (currentModule.options[slug]) {\n                    breadcrumbpath += \"/\" + slug\n                    breadCrumbs.push({title: currentModule.options[slug].title, path: breadcrumbpath})\n                    currentModule = currentModule.options[slug]\n                } else {\n                    setNotFound(true)\n                }\n            }\n            setBreadCrumbs(breadCrumbs)\n            setModule(currentModule)\n        },\n        [path, lang, selectedLang],\n    );\n\n    const selectLang = useCallback(\n        () => {\n            if(SupportedLanguages[lang]){\n                setSelectedLang(SupportedLanguages[lang])\n                setBreadCrumbs([{title: lang.title, path: \"/\" + lang}])\n            } else {\n                setNotFound(true)\n            }\n        },\n        [lang],\n    );\n\n    useEffect(() => {\n        selectLang();\n        parsePath();\n    }, [location.pathname, parsePath, selectLang]);\n    \n    return (\n        <PathContext.Provider value={match.params}>\n            <LangContext.Provider value={selectedLang}>\n                <MainLayout key={location.pathname}>\n                    <HeroUnit title={path ? module.title : selectedLang.literals.how_can_we_help} breadCrumbs={breadCrumbs} />\n                    <ContentWrapper sideBarList={sideBarListState} main={module.content} sources={module.sources} />\n                    <Cards options={module.options} />\n                    {notFound ? <Redirect to=\"/404\" /> : null}\n                </MainLayout>\n            </LangContext.Provider>\n        </PathContext.Provider>\n    )\n}\n\nexport default withRouter(Navigator)","import React, { useEffect, useState, useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from '@material-ui/core/Grow';\n\nimport LangContext from \"../../utils/LangContext\"\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 9),\n  },\n  welcome: {\n    marginBottom: \"0px\",\n  }\n}));\n\nexport default function LandingHeroUnit({ title, breadCrumbs }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n  const { literals } = useContext(LangContext)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <Grow in={checked} timeout={1000}>\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography\n            className={classes.welcome}\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            {literals.welcome}\n          </Typography>\n          <Typography\n            className={classes.chooseLang}\n            component=\"h2\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {literals.choose_lang}\n          </Typography>\n        </Container>\n      </div>\n    </Grow>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport en from \"../../lang/en.json\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst supportedLangs = [en]\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\"\n    }\n}));\n\nexport default function LangCards() {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    return (\n        <LangContext.Provider value={en}>\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <Grid container spacing={4}>\n                    {supportedLangs.map((lang, index) => (\n                        <Grid item key={index} xs={12} sm={6} md={4}>\n                            <Grow in={checked} timeout={1000}>\n                                <CardActionArea className={classes.link} to={\"/\" + lang.slug} component={Link}>\n                                    <Card className={classes.card}>\n                                        {/* <CardMedia\n                                            className={classes.cardMedia}\n                                            image=\"https://via.placeholder.com/265x150.webp\"\n                                            title=\"Image title\"\n                                        /> */}\n                                        <CardContent className={classes.cardContent}>\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                {lang.title}\n                                            </Typography>\n                                        </CardContent>\n                                        <CardActions>\n                                            <Typography color=\"primary\" component=\"p\">\n                                                {lang.literals.choose}\n                                            </Typography>\n                                        </CardActions>\n                                    </Card>\n\n                                </CardActionArea>\n                            </Grow>\n\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n        </LangContext.Provider>\n    );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport LandingHeroUnit from \"../components/LandingHeroUnit\";\nimport LangCards from \"../components/LangCards\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <MainLayout>\n      <LandingHeroUnit />\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n            <LangCards />\n        </Grid>\n      </Container>\n    </MainLayout>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function NotFound(props) {\n  const classes = useStyles();\n\n  return (\n    <MainLayout>\n      <HeroUnit title=\"Page Not Found\" breadCrumbs={[{title: \"404\", path: \"/404\"}]} />\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n            Page Not Found\n        </Grid>\n      </Container>\n    </MainLayout>\n  );\n}\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport Navigator from './views/pages/Navigator'\nimport Home from './views/pages/Home'\nimport NotFound from './views/pages/NotFound'\n\nexport default function App() {\n    return (\n        <Router>\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/404\" component={NotFound} />\n                <Route path=\"/:lang/:path*\" component={Navigator} />\n            </Switch>\n        </Router>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0c9d4a\",\n    }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}