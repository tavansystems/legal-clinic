{"version":3,"sources":["utils/LangContext.js","utils/PathContext.js","utils/SupportedLanguages.js","views/components/LanguageSelector.jsx","views/components/Footer.jsx","utils/NavigatorOptions.js","views/components/SearchResultList.jsx","views/components/SearchBar.jsx","views/components/Header.jsx","views/layouts/MainLayout.jsx","views/components/Cards.jsx","views/components/SideBarLinks.jsx","views/components/ContentCard.jsx","views/components/ContentWrapper.jsx","views/components/BreadCrumbs.jsx","views/components/HeroUnit.jsx","views/pages/Navigator.jsx","views/components/LandingHeroUnit.jsx","views/components/LangCards.jsx","views/pages/Home.jsx","views/pages/NotFound.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LangContext","React","createContext","en","lang","path","SupportedLanguages","useStyles","makeStyles","theme","langIcon","fontSize","marginRight","selectOption","display","select","background","inputInput","padding","spacing","border","paddingLeft","transition","transitions","create","width","breakpoints","up","LanguageSelector","classes","slug","useContext","PathContext","Select","labelId","id","value","label","nativeInput","disableUnderline","MenuItem","disabled","default","className","Typography","Object","keys","map","to","component","Link","title","footer","backgroundColor","palette","paper","langSelector","fade","borderRadius","shape","margin","common","white","Footer","literals","Grid","container","item","xs","md","variant","align","gutterBottom","app_name","color","disclaimer","copyright","target","href","app_org_link","org_name","Date","getFullYear","developed_by","rel","url","listRoot","position","maxWidth","inline","link","textDecoration","SearchResultList","results","length","List","result","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","content","slice","Divider","defaultProps","optionList","mapOptions","options","key","push","searchIcon","height","pointerEvents","justifyContent","inputRoot","Header","useState","searchValue","setSearchValue","InputBase","onChange","e","placeholder","search","root","input","inputProps","NavigatorOptions","filter","option","searchValLowerCase","toLowerCase","includes","flexGrow","icon","marginLeft","down","minWidth","AppBar","Toolbar","toolbar","noWrap","MainLayout","children","Fragment","CssBaseline","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","Cards","location","checked","setChecked","useEffect","Container","entries","index","sm","Grow","in","timeout","CardActionArea","pathname","Card","CardContent","CardActions","choose","withRouter","main","SideBarLinks","links","Paper","elevation","button","ContentCard","sidebar","column","ContentWrapper","sideBarList","marginTop","BreadCrumbs","currentTitle","Breadcrumbs","maxItems","separator","aria-label","home","heroContent","heroButtons","HeroUnit","breadCrumbs","justify","match","module","setModule","setBreadCrumbs","notFound","setNotFound","selectedLang","setSelectedLang","sideBarListState","setSideBarListState","params","parsePath","useCallback","pathlist","split","currentModule","breadcrumbpath","finalParent","selectLang","Provider","how_can_we_help","welcome","marginBottom","LandingHeroUnit","chooseLang","choose_lang","supportedLangs","LangCards","Home","NotFound","props","App","exact","Navigator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d7dd201d.chunk.js","sourcesContent":["import React from \"react\";\nimport en from \"../lang/en.json\"\n\nconst LangContext = React.createContext(en);\n\nexport default LangContext;\n","import React from \"react\";\n\nconst LangContext = React.createContext({\n    lang: \"\",\n    path: \"\"\n});\n\nexport default LangContext;\n","import en from \"../lang/en.json\";\n\nconst SupportedLanguages = {\n    en: en\n};\n\nexport default SupportedLanguages;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PublicIcon from '@material-ui/icons/Public';\n\nimport SupportedLanguages from '../../utils/SupportedLanguages';\nimport LangContext from \"../../utils/LangContext\";\nimport PathContext from \"../../utils/PathContext\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    langIcon: {\n        fontSize: \"16px\",\n        marginRight: \"10px\",\n    },\n    selectOption: {\n        display: \"inline\",\n    },\n    select: {\n        '&:focus': {\n            background: \"inherit\"\n        },\n    },\n    inputInput: {\n        padding: theme.spacing(0, 1),\n        border: \"none\",\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        \n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '50ch'\n            }\n        }\n    }\n}));\n\nfunction LanguageSelector() {\n    const classes = useStyles()\n    const { slug } = useContext(LangContext)\n    const { lang, path } = useContext(PathContext)\n\n    return (\n        <Select\n            labelId=\"lang-selector\"\n            id=\"lang-selector\"\n            value={lang === \"\" ? \"None\" : slug}\n            label=\"Language\"\n            classes={{ nativeInput: classes.inputInput, select: classes.select}}\n            disableUnderline\n        >\n            <MenuItem value=\"None\" disabled default>\n                <PublicIcon className={classes.langIcon} />\n                <Typography className={classes.selectOption}>\n                    Select Your Language\n                </Typography>    \n            </MenuItem>\n            {Object.keys(SupportedLanguages).map(lang => (\n                <MenuItem to={\"/\" + SupportedLanguages[lang].slug + \"/\" + path} component={Link} key={SupportedLanguages[lang].slug} value={SupportedLanguages[lang].slug}>\n                    <PublicIcon className={classes.langIcon} />\n                    <Typography className={classes.selectOption}>\n                        {SupportedLanguages[lang].title}\n                    </Typography>\n                </MenuItem>\n            ))}\n        </Select>\n    )\n}\n\nexport default LanguageSelector\n\n\n","import React, { useContext } from 'react';\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\n\nimport LanguageSelector from \"./LanguageSelector\"\nimport LangContext from \"../../utils/LangContext\"\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6)\n    },\n    langSelector: {\n        backgroundColor: fade(\"#eee\", 0.65),\n        borderRadius: theme.shape.borderRadius,\n        margin: \"20px auto 0\",\n        width: \"fit-content\",\n        padding: theme.spacing(0, 1),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        }\n    },\n}));\n\nexport default function Footer() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <footer className={classes.footer}>\n            <Grid container>\n                <Grid item xs={12} md={4}></Grid>\n                <Grid item xs={12} md={4}>\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        {literals.app_name}\n                    </Typography>\n                    <Typography spacing=\"10\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                        {literals.disclaimer}\n                    </Typography>\n                    <div className={classes.langSelector}>\n                        <LanguageSelector />\n                    </div>\n                    <br />\n                    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                        {literals.copyright} © {' '}\n                        <Link color=\"inherit\" target=\"_BLANK\" href={literals.app_org_link}>\n                            {literals.org_name}\n                        </Link>{' '}\n                        {new Date().getFullYear()}\n                        {'.'}\n                        {literals.developed_by} <Link href=\"https://tavansystems.com\" target=\"_BLANK\" rel=\"noreferrer\">Tavan Systems Inc.</Link>\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={4}></Grid>\n            </Grid>\n        </footer>\n    )\n}","import SupportedLanguages from './SupportedLanguages';\n\nlet url\nconst optionList = []\nconst mapOptions = (options, path = \"/\") => {\n    for (let key in options) {\n        url = (path !== \"/\" ? path : \"\") + \"/\" + key\n        optionList.push({\n            title: options[key].title,\n            path: url,\n            content: options[key].content ? options[key].content : null\n        })\n        if (options[key].options) {\n            mapOptions(options[key].options, url)\n        }\n    }\n    url = \"\"\n}\nmapOptions(SupportedLanguages)\n\nexport default optionList;","\n\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: \"black\"\n    },\n    listRoot: {\n        position: 'absolute',\n        width: '100%',\n        maxWidth: '70ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n    link: {\n        textDecoration: \"none\"\n    }\n}));\n\nexport default function SearchResultList({ results }) {\n    const classes = useStyles();\n\n    if (results.length === 0) {\n        return (<></>)\n    }\n\n    return (\n        <List className={classes.listRoot}>\n            {results.map((result) => (\n                <Link className={classes.link} key={result.path} to={result.path}>\n                    <ListItem alignItems=\"flex-start\">\n\n                        <ListItemAvatar>\n                            <Avatar alt={result.title} src=\"https://via.placeholder.com/265x150.webp\" />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.title}\n                            primary={result.title}\n                            secondary={\n                                <ReactMarkdown>\n                                   {result.content !== null ? result.content.slice(0, 100)+ \"...\" : \"\"}\n                                </ReactMarkdown>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </Link>\n\n            ))}\n        </List>\n    )\n}\n\nSearchResultList.defaultProps = {\n    results: []\n};","\n\nimport React, { useContext, useState } from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LangContext from \"../../utils/LangContext\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport SearchResultList from './SearchResultList';\n\nimport NavigatorOptions from '../../utils/NavigatorOptions';\n\nconst useStyles = makeStyles((theme) => ({\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '50ch',\n            },\n        },\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const [searchValue, setSearchValue] = useState(\"\")\n    const { literals } = useContext(LangContext);\n\n    const optionsFilter = option => {\n        const searchValLowerCase = searchValue.toLowerCase()\n        if(option.content !== null) return option.content.toLowerCase().includes(searchValLowerCase)\n        return option.title.toLowerCase().includes(searchValLowerCase)\n    }\n\n    return (\n        <div>\n            <div className={classes.searchIcon}>\n                <SearchIcon />\n            </div>\n            <InputBase\n                value={searchValue}\n                onChange={(e) => setSearchValue(e.target.value)}\n                placeholder={literals.search + \"…\"}\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n            />\n            {\n                searchValue.length > 0\n                    ? <SearchResultList results={NavigatorOptions.filter(optionsFilter)} />\n                    : <></>\n            }\n        </div>\n    )\n}\n\n\n","import React, { useContext } from 'react';\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\nimport LangContext from \"../../utils/LangContext\";\nimport SearchBar from './SearchBar';\nimport LanguageSelector from \"./LanguageSelector\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    langSelector: {\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        borderRadius: theme.shape.borderRadius,\n        marginLeft: 0,\n        padding: theme.spacing(0, 1),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: \"none\"\n        },\n    },\n    search: {\n        position: 'relative',\n        marginRight: \"10px\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        minWidth: '200px',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    }\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <AppBar position=\"relative\">\n            <Toolbar className={classes.toolbar}>\n                <Gavel className={classes.icon} />\n                <Typography className={classes.title} variant=\"h6\" noWrap>\n                    {literals.app_name}\n                </Typography>\n                <div className={classes.search}>\n                    <SearchBar />\n                </div>\n                <div className={classes.langSelector}>\n                    <LanguageSelector />\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\n\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\nimport Footer from \"../components/Footer\"\nimport Header from \"../components/Header\"\n\n// const useStyles = makeStyles((theme) => ({\n// }));\n\nexport default function MainLayout({children}) {\n  // const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Header />\n      <main>\n        {children}\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport Grow from '@material-ui/core/Grow';\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\",\n    }\n}));\n\nfunction Cards({ options, location }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n    const { literals } = useContext(LangContext);\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    if (options.length === 0) {\n        return <></>;\n    }\n\n    return (\n        <Container\n            key={location.pathname}\n            className={classes.cardGrid}\n            maxWidth=\"md\"\n        >\n            <Grid container spacing={4}>\n                {Object.entries(options).map(([key, option], index) => (\n                    <Grid item key={index} xs={12} sm={6} md={4}>\n                        <Grow in={checked} timeout={1000}>\n                            <CardActionArea className={classes.link} to={location.pathname + \"/\" + key} component={Link}>\n                                <Card className={classes.card}>\n                                    {/* <CardMedia\n                                        className={classes.cardMedia}\n                                        image=\"https://via.placeholder.com/265x150.webp\"\n                                        title=\"Image title\"\n                                    /> */}\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            {option.title}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Typography color=\"primary\" className={classes.choose} component=\"p\">\n                                            {literals.choose}\n                                        </Typography>\n                                    </CardActions>\n                                </Card>\n                            </CardActionArea>\n                        </Grow>\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    );\n}\n\nCards.defaultProps = {\n    options: [],\n};\n\nexport default withRouter(Cards);\n","\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Grow from '@material-ui/core/Grow';\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\"\n    }\n}));\n\nfunction SideBarLinks({ links }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1}>\n                <List>\n                    {links.map(item => (\n                        <Link className={classes.link} to={item.path} key={item.path}>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <LinkIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={item.title}\n                                />\n                            </ListItem>\n                        </Link>\n                    ))}\n                </List>\n            </Paper>\n        </Grow>\n    )\n}\n\nexport default SideBarLinks","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from 'react-markdown';\n\nimport Grow from '@material-ui/core/Grow';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(2),\n        },\n    }\n}));\n\nexport default function ContentCard({ content }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1} className={classes.paper}>\n                <Typography\n                    variant=\"h5\"\n                    color=\"textSecondary\"\n                >\n                    <ReactMarkdown>{content}</ReactMarkdown>\n                </Typography>\n            </Paper>\n        </Grow>\n    )\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport SideBarLinks from \"./SideBarLinks\"\nimport ContentCard from \"./ContentCard\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(6),\n        [theme.breakpoints.down('sm')]: {\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n        },\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\"\n    },\n    sidebar: {\n        width: \"100%\",\n        padding: theme.spacing(1), \n    },\n    column: {\n        padding: theme.spacing(1), \n    }\n}));\n\nfunction ContentWrapper({ sideBarList, main }) {\n    const classes = useStyles();\n\n    if (!main) {\n        return (<></>)\n    }\n\n    return (\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\n            <Grid container>\n                <Grid item md={9} className={classes.column}>\n                    <ContentCard content={main} />\n                </Grid>\n                <Grid item md={3} className={classes.sidebar}>\n                    <SideBarLinks links={sideBarList} /> \n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default ContentWrapper","import React, { useContext} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport LangContext from '../../utils/LangContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main\n  }\n}));\n\n\nexport default function BreadCrumbs({path}) {\n  const classes = useStyles();\n  const { literals } = useContext(LangContext)\n  const currentTitle = path[path.length - 1] ? path[path.length - 1]['title'] : null\n\n  return (\n    <div className={classes.root}>\n      <Breadcrumbs maxItems={4} separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        <Link className={classes.link} color=\"inherit\" to=\"/\">\n          {literals.home}\n        </Link>\n        {\n          currentTitle && path.slice(0, path.length -1).map(link => (\n            <Link className={classes.link} key={link.path} to={link.path}>\n              {link.title}\n            </Link>)\n          )\n        }\n        {\n          currentTitle && <Typography color=\"textPrimary\">{currentTitle}</Typography>\n        }\n      </Breadcrumbs>\n    </div>\n  );\n}\n\nBreadCrumbs.defaultProps = {\n  path: [{}]\n};","import React, { useEffect, useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from '@material-ui/core/Grow';\n\nimport BreadCrumbs from \"./BreadCrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 9),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default function HeroUnit({ title, breadCrumbs }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <Grow in={checked} timeout={1000}>\n\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"md\">\n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            {title}\n          </Typography>\n          {/* <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          DESC. PLACEHOLDER\n        </Typography> */}\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <BreadCrumbs path={breadCrumbs} />\n            </Grid>\n          </div>\n        </Container>\n      </div>\n    </Grow>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport LangContext from \"../../utils/LangContext\";\nimport PathContext from \"../../utils/PathContext\";\nimport MainLayout from '../layouts/MainLayout';\nimport Cards from \"../components/Cards\"\nimport ContentWrapper from \"../components/ContentWrapper\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nimport SupportedLanguages from '../../utils/SupportedLanguages';\n\nfunction Navigator({ location, match }) {\n    const [module, setModule] = useState({})\n    const [breadCrumbs, setBreadCrumbs] = useState([])\n    const [notFound, setNotFound] = useState(false)\n    const [selectedLang, setSelectedLang] = useState(SupportedLanguages.en)\n    const [sideBarListState, setSideBarListState] = useState([])\n    const { path, lang } = match.params\n\n    const parsePath = useCallback(\n        () => {\n            const pathlist = path ? path.split(\"/\") : []\n            const breadCrumbs = []\n            let currentModule = selectedLang\n            let breadcrumbpath = \"/\" + lang\n            const finalParent = pathlist[pathlist.length - 1]\n            for (let slug of pathlist) {\n                if (finalParent === slug) {\n                    let sideBarList = []\n                    for (let key in currentModule.options){\n                        if(finalParent !== key){\n                            sideBarList.push({\n                                title: currentModule.options[key].title,\n                                path: key\n                            })\n                        }\n                    }\n                    setSideBarListState(sideBarList)\n                }\n                if (!currentModule.options) {\n                    break\n                }\n                if (currentModule.options[slug]) {\n                    breadcrumbpath += \"/\" + slug\n                    breadCrumbs.push({title: currentModule.options[slug].title, path: breadcrumbpath})\n                    currentModule = currentModule.options[slug]\n                } else {\n                    setNotFound(true)\n                }\n            }\n            setBreadCrumbs(breadCrumbs)\n            setModule(currentModule)\n        },\n        [path, lang, selectedLang],\n    );\n\n    const selectLang = useCallback(\n        () => {\n            if(SupportedLanguages[lang]){\n                setSelectedLang(SupportedLanguages[lang])\n                setBreadCrumbs([{title: lang.title, path: \"/\" + lang}])\n            } else {\n                setNotFound(true)\n            }\n        },\n        [lang],\n    );\n\n    useEffect(() => {\n        selectLang();\n        parsePath();\n    }, [location.pathname, parsePath, selectLang]);\n    \n    return (\n        <PathContext.Provider value={match.params}>\n            <LangContext.Provider value={selectedLang}>\n                <MainLayout key={location.pathname}>\n                    <HeroUnit title={path ? module.title : selectedLang.literals.how_can_we_help} breadCrumbs={breadCrumbs} />\n                    <ContentWrapper sideBarList={sideBarListState} main={module.content} />\n                    <Cards options={module.options} />\n                    {notFound ? <Redirect to=\"/404\" /> : null}\n                </MainLayout>\n            </LangContext.Provider>\n        </PathContext.Provider>\n    )\n}\n\nexport default withRouter(Navigator)","import React, { useEffect, useState, useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from '@material-ui/core/Grow';\n\nimport LangContext from \"../../utils/LangContext\"\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 9),\n  },\n  welcome: {\n    marginBottom: \"0px\",\n  }\n}));\n\nexport default function LandingHeroUnit({ title, breadCrumbs }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n  const { literals } = useContext(LangContext)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <Grow in={checked} timeout={1000}>\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography\n            className={classes.welcome}\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            {literals.welcome}\n          </Typography>\n          <Typography\n            className={classes.chooseLang}\n            component=\"h2\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {literals.choose_lang}\n          </Typography>\n        </Container>\n      </div>\n    </Grow>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport en from \"../../lang/en.json\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst supportedLangs = [en]\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\"\n    }\n}));\n\nexport default function LangCards() {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    return (\n        <LangContext.Provider value={en}>\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <Grid container spacing={4}>\n                    {supportedLangs.map((lang, index) => (\n                        <Grid item key={index} xs={12} sm={6} md={4}>\n                            <Grow in={checked} timeout={1000}>\n                                <CardActionArea className={classes.link} to={\"/\" + lang.slug} component={Link}>\n                                    <Card className={classes.card}>\n                                        {/* <CardMedia\n                                            className={classes.cardMedia}\n                                            image=\"https://via.placeholder.com/265x150.webp\"\n                                            title=\"Image title\"\n                                        /> */}\n                                        <CardContent className={classes.cardContent}>\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                {lang.title}\n                                            </Typography>\n                                        </CardContent>\n                                        <CardActions>\n                                            <Typography color=\"primary\" component=\"p\">\n                                                {lang.literals.choose}\n                                            </Typography>\n                                        </CardActions>\n                                    </Card>\n\n                                </CardActionArea>\n                            </Grow>\n\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n        </LangContext.Provider>\n    );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport LandingHeroUnit from \"../components/LandingHeroUnit\";\nimport LangCards from \"../components/LangCards\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <MainLayout>\n      <LandingHeroUnit />\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n            <LangCards />\n        </Grid>\n      </Container>\n    </MainLayout>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function NotFound(props) {\n  const classes = useStyles();\n\n  return (\n    <MainLayout>\n      <HeroUnit title=\"Page Not Found\" breadCrumbs={[{title: \"404\", path: \"/404\"}]} />\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n            Page Not Found\n        </Grid>\n      </Container>\n    </MainLayout>\n  );\n}\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport Navigator from './views/pages/Navigator'\nimport Home from './views/pages/Home'\nimport NotFound from './views/pages/NotFound'\n\nexport default function App() {\n    return (\n        <Router>\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/404\" component={NotFound} />\n                <Route path=\"/:lang/:path*\" component={Navigator} />\n            </Switch>\n        </Router>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0c9d4a\",\n    }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}