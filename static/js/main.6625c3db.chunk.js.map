{"version":3,"sources":["utils/LangContext.js","utils/SupportedLanguages.js","views/components/LanguageSelector.jsx","views/components/Footer.jsx","utils/NavigatorOptions.js","views/components/SearchResultList.jsx","views/components/SearchBar.jsx","views/components/Header.jsx","views/layouts/MainLayout.jsx","views/components/Cards.jsx","views/components/SideBarLinks.jsx","views/components/ContentCard.jsx","views/components/ContentWrapper.jsx","views/components/BreadCrumbs.jsx","views/components/HeroUnit.jsx","views/pages/Navigator.jsx","views/components/LandingHeroUnit.jsx","views/components/LangCards.jsx","views/pages/Home.jsx","views/pages/NotFound.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LangContext","React","createContext","en","SupportedLanguages","useStyles","makeStyles","theme","langIcon","fontSize","marginRight","selectOption","display","select","background","inputInput","padding","spacing","border","paddingLeft","transition","transitions","create","width","breakpoints","up","withRouter","location","classes","slug","useContext","Select","labelId","id","value","pathname","label","nativeInput","disableUnderline","MenuItem","disabled","default","className","Typography","Object","keys","map","lang","to","component","Link","src","icon","alt","title","footer","backgroundColor","palette","paper","langSelector","fade","borderRadius","shape","margin","common","white","Footer","literals","Grid","container","item","xs","md","variant","align","gutterBottom","app_name","color","disclaimer","copyright","target","href","mfso","Date","getFullYear","url","listRoot","position","maxWidth","inline","link","textDecoration","SearchResultList","results","length","List","result","path","ListItem","alignItems","ListItemAvatar","Avatar","ListItemText","primary","secondary","content","slice","Divider","defaultProps","optionList","mapOptions","options","key","push","searchIcon","height","pointerEvents","justifyContent","inputRoot","Header","useState","searchValue","setSearchValue","InputBase","onChange","e","placeholder","search","root","input","inputProps","NavigatorOptions","filter","option","searchValLowerCase","toLowerCase","includes","flexGrow","marginLeft","down","minWidth","AppBar","Toolbar","toolbar","noWrap","MainLayout","children","Fragment","CssBaseline","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","Cards","checked","setChecked","useEffect","Container","entries","index","sm","Grow","in","timeout","CardActionArea","Card","CardMedia","image","CardContent","CardActions","choose","main","SideBarLinks","links","Paper","elevation","button","ContentCard","sidebar","column","ContentWrapper","sideBarList","marginTop","BreadCrumbs","currentTitle","Breadcrumbs","maxItems","separator","aria-label","home","heroContent","heroButtons","HeroUnit","breadCrumbs","justify","match","module","setModule","setBreadCrumbs","notFound","setNotFound","selectedLang","setSelectedLang","sideBarListState","setSideBarListState","params","parsePath","useCallback","pathlist","split","currentModule","breadcrumbpath","finalParent","selectLang","Provider","how_can_we_help","welcome","marginBottom","LandingHeroUnit","chooseLang","choose_lang","supportedLangs","LangCards","Home","NotFound","props","App","exact","Navigator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6625c3db.chunk.js","sourcesContent":["import React from \"react\";\nimport en from \"../lang/en.json\"\n\nconst LangContext = React.createContext(en);\n\nexport default LangContext;\n","import en from \"../lang/en.json\";\n\nconst SupportedLanguages = {\n    en: en\n};\n\nexport default SupportedLanguages;\n","import React, { useContext } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PublicIcon from '@material-ui/icons/Public';\n\nimport SupportedLanguages from '../../utils/SupportedLanguages';\nimport LangContext from \"../../utils/LangContext\"\n\nconst useStyles = makeStyles((theme) => ({\n    langIcon: {\n        fontSize: \"16px\",\n        marginRight: \"10px\",\n    },\n    selectOption: {\n        display: \"inline\",\n    },\n    select: {\n        '&:focus': {\n            background: \"inherit\"\n        },\n    },\n    inputInput: {\n        padding: theme.spacing(0, 1),\n        border: \"none\",\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        \n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '50ch'\n            }\n        }\n    }\n}));\n\nfunction LanguageSelector({location}) {\n    const classes = useStyles();\n    const { slug } = useContext(LangContext)\n\n    return (\n        <Select\n            labelId=\"lang-selector\"\n            id=\"lang-selector\"\n            value={location.pathname === \"/\" ? \"None\" : slug}\n            label=\"Language\"\n            classes={{ nativeInput: classes.inputInput, select: classes.select}}\n            disableUnderline\n        >\n            <MenuItem value=\"None\" disabled default>\n                <PublicIcon className={classes.langIcon} />\n                <Typography className={classes.selectOption}>\n                    Select Your Language\n                </Typography>    \n            </MenuItem>\n            {Object.keys(SupportedLanguages).map(lang => (\n                <MenuItem to={\"/\" + SupportedLanguages[lang].slug} component={Link} key={SupportedLanguages[lang].slug} value={SupportedLanguages[lang].slug}>\n                    <img className={classes.langIcon} src={SupportedLanguages[lang].icon} alt={SupportedLanguages[lang].title} />\n                    <Typography className={classes.selectOption}>\n                        {SupportedLanguages[lang].title}\n                    </Typography>\n                </MenuItem>\n            ))}\n        </Select>\n    )\n}\n\nexport default withRouter(LanguageSelector)\n\n\n","import React, { useContext } from 'react';\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\n\nimport LanguageSelector from \"./LanguageSelector\"\nimport LangContext from \"../../utils/LangContext\"\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6)\n    },\n    langSelector: {\n        backgroundColor: fade(\"#eee\", 0.65),\n        borderRadius: theme.shape.borderRadius,\n        margin: \"20px auto 0\",\n        width: \"fit-content\",\n        padding: theme.spacing(0, 1),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        }\n    },\n}));\n\nexport default function Footer() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <footer className={classes.footer}>\n            <Grid container>\n                <Grid item xs={12} md={4}></Grid>\n                <Grid item xs={12} md={4}>\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        {literals.app_name}\n                    </Typography>\n                    <Typography spacing=\"10\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                        {literals.disclaimer}\n                    </Typography>\n                    <div className={classes.langSelector}>\n                        <LanguageSelector />\n                    </div>\n                    <br />\n                    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                        {literals.copyright} © {' '}\n                        <Link color=\"inherit\" target=\"_BLANK\" href=\"https://mfso.ca\">\n                            {literals.mfso}\n                        </Link>{' '}\n                        {new Date().getFullYear()}\n                        {'.'}\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={4}></Grid>\n            </Grid>\n        </footer>\n    )\n}","import SupportedLanguages from './SupportedLanguages';\n\nlet url\nconst optionList = []\nconst mapOptions = (options, path = \"/\") => {\n    for (let key in options) {\n        url = (path !== \"/\" ? path : \"\") + \"/\" + key\n        optionList.push({\n            title: options[key].title,\n            path: url,\n            content: options[key].content ? options[key].content : null\n        })\n        if (options[key].options) {\n            mapOptions(options[key].options, url)\n        }\n    }\n    url = \"\"\n}\nmapOptions(SupportedLanguages)\n\nexport default optionList;","\n\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: \"black\"\n    },\n    listRoot: {\n        position: 'absolute',\n        width: '100%',\n        maxWidth: '70ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n    link: {\n        textDecoration: \"none\"\n    }\n}));\n\nexport default function SearchResultList({ results }) {\n    const classes = useStyles();\n\n    if (results.length === 0) {\n        return (<></>)\n    }\n\n    return (\n        <List className={classes.listRoot}>\n            {results.map((result) => (\n                <Link className={classes.link} key={result.path} to={result.path}>\n                    <ListItem alignItems=\"flex-start\">\n\n                        <ListItemAvatar>\n                            <Avatar alt={result.title} src=\"https://via.placeholder.com/265x150.webp\" />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.title}\n                            primary={result.title}\n                            secondary={\n                                <ReactMarkdown>\n                                   {result.content !== null ? result.content.slice(0, 100)+ \"...\" : \"\"}\n                                </ReactMarkdown>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </Link>\n\n            ))}\n        </List>\n    )\n}\n\nSearchResultList.defaultProps = {\n    results: []\n};","\n\nimport React, { useContext, useState } from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LangContext from \"../../utils/LangContext\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport SearchResultList from './SearchResultList';\n\nimport NavigatorOptions from '../../utils/NavigatorOptions';\n\nconst useStyles = makeStyles((theme) => ({\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '50ch',\n            },\n        },\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const [searchValue, setSearchValue] = useState(\"\")\n    const { literals } = useContext(LangContext);\n\n    const optionsFilter = option => {\n        const searchValLowerCase = searchValue.toLowerCase()\n        if(option.content !== null) return option.content.toLowerCase().includes(searchValLowerCase)\n        return option.title.toLowerCase().includes(searchValLowerCase)\n    }\n\n    return (\n        <div>\n            <div className={classes.searchIcon}>\n                <SearchIcon />\n            </div>\n            <InputBase\n                value={searchValue}\n                onChange={(e) => setSearchValue(e.target.value)}\n                placeholder={literals.search + \"…\"}\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n            />\n            {\n                searchValue.length > 0\n                    ? <SearchResultList results={NavigatorOptions.filter(optionsFilter)} />\n                    : <></>\n            }\n        </div>\n    )\n}\n\n\n","import React, { useContext } from 'react';\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\nimport LangContext from \"../../utils/LangContext\";\nimport SearchBar from './SearchBar';\nimport LanguageSelector from \"./LanguageSelector\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    langSelector: {\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        borderRadius: theme.shape.borderRadius,\n        marginLeft: 0,\n        padding: theme.spacing(0, 1),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: \"none\"\n        },\n    },\n    search: {\n        position: 'relative',\n        marginRight: \"10px\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        minWidth: '200px',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    }\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <AppBar position=\"relative\">\n            <Toolbar className={classes.toolbar}>\n                <Gavel className={classes.icon} />\n                <Typography className={classes.title} variant=\"h6\" noWrap>\n                    {literals.app_name}\n                </Typography>\n                <div className={classes.search}>\n                    <SearchBar />\n                </div>\n                <div className={classes.langSelector}>\n                    <LanguageSelector />\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\n\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\nimport Footer from \"../components/Footer\"\nimport Header from \"../components/Header\"\n\n// const useStyles = makeStyles((theme) => ({\n// }));\n\nexport default function MainLayout({children}) {\n  // const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Header />\n      <main>\n        {children}\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport Grow from '@material-ui/core/Grow';\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\",\n    }\n}));\n\nfunction Cards({ options, location }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n    const { literals } = useContext(LangContext);\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    if (options.length === 0) {\n        return <></>;\n    }\n\n    return (\n        <Container\n            key={location.pathname}\n            className={classes.cardGrid}\n            maxWidth=\"md\"\n        >\n            <Grid container spacing={4}>\n                {Object.entries(options).map(([key, option], index) => (\n                    <Grid item key={index} xs={12} sm={6} md={4}>\n                        <Grow in={checked} timeout={1000}>\n                            <CardActionArea className={classes.link} to={location.pathname + \"/\" + key} component={Link}>\n                                <Card className={classes.card}>\n                                    <CardMedia\n                                        className={classes.cardMedia}\n                                        image=\"https://via.placeholder.com/265x150.webp\"\n                                        title=\"Image title\"\n                                    />\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            {option.title}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Typography color=\"primary\" className={classes.choose} component=\"p\">\n                                            {literals.choose}\n                                        </Typography>\n                                    </CardActions>\n                                </Card>\n                            </CardActionArea>\n                        </Grow>\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    );\n}\n\nCards.defaultProps = {\n    options: [],\n};\n\nexport default withRouter(Cards);\n","\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Grow from '@material-ui/core/Grow';\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\"\n    }\n}));\n\nfunction SideBarLinks({ links }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1}>\n                <List>\n                    {links.map(item => (\n                        <Link className={classes.link} to={item.path} key={item.path}>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <LinkIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={item.title}\n                                />\n                            </ListItem>\n                        </Link>\n                    ))}\n                </List>\n            </Paper>\n        </Grow>\n    )\n}\n\nexport default SideBarLinks","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from 'react-markdown';\n\nimport Grow from '@material-ui/core/Grow';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(2),\n        },\n    }\n}));\n\nexport default function ContentCard({ content }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1} className={classes.paper}>\n                <Typography\n                    variant=\"h5\"\n                    color=\"textSecondary\"\n                >\n                    <ReactMarkdown>{content}</ReactMarkdown>\n                </Typography>\n            </Paper>\n        </Grow>\n    )\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport SideBarLinks from \"./SideBarLinks\"\nimport ContentCard from \"./ContentCard\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(6),\n        [theme.breakpoints.down('sm')]: {\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n        },\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\"\n    },\n    sidebar: {\n        width: \"100%\",\n        padding: theme.spacing(1), \n    },\n    column: {\n        padding: theme.spacing(1), \n    }\n}));\n\nfunction ContentWrapper({ sideBarList, main }) {\n    const classes = useStyles();\n\n    if (!main) {\n        return (<></>)\n    }\n\n    return (\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\n            <Grid container>\n                <Grid item md={9} className={classes.column}>\n                    <ContentCard content={main} />\n                </Grid>\n                <Grid item md={3} className={classes.sidebar}>\n                    <SideBarLinks links={sideBarList} /> \n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default ContentWrapper","import React, { useContext} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport LangContext from '../../utils/LangContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main\n  }\n}));\n\n\nexport default function BreadCrumbs({path}) {\n  const classes = useStyles();\n  const { literals } = useContext(LangContext)\n  const currentTitle = path[path.length - 1] ? path[path.length - 1]['title'] : null\n\n  return (\n    <div className={classes.root}>\n      <Breadcrumbs maxItems={4} separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        <Link className={classes.link} color=\"inherit\" to=\"/\">\n          {literals.home}\n        </Link>\n        {\n          currentTitle && path.slice(0, path.length -1).map(link => (\n            <Link className={classes.link} key={link.path} to={link.path}>\n              {link.title}\n            </Link>)\n          )\n        }\n        {\n          currentTitle && <Typography color=\"textPrimary\">{currentTitle}</Typography>\n        }\n      </Breadcrumbs>\n    </div>\n  );\n}\n\nBreadCrumbs.defaultProps = {\n  path: [{}]\n};","import React, { useEffect, useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from '@material-ui/core/Grow';\n\nimport BreadCrumbs from \"./BreadCrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 9),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default function HeroUnit({ title, breadCrumbs }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <Grow in={checked} timeout={1000}>\n\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"md\">\n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            {title}\n          </Typography>\n          {/* <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          DESC. PLACEHOLDER\n        </Typography> */}\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <BreadCrumbs path={breadCrumbs} />\n            </Grid>\n          </div>\n        </Container>\n      </div>\n    </Grow>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport LangContext from \"../../utils/LangContext\";\nimport MainLayout from '../layouts/MainLayout';\nimport Cards from \"../components/Cards\"\nimport ContentWrapper from \"../components/ContentWrapper\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nimport SupportedLanguages from '../../utils/SupportedLanguages';\n\nfunction Navigator({ location, match }) {\n    const [module, setModule] = useState({})\n    const [breadCrumbs, setBreadCrumbs] = useState([])\n    const [notFound, setNotFound] = useState(false)\n    const [selectedLang, setSelectedLang] = useState(SupportedLanguages.en)\n    const [sideBarListState, setSideBarListState] = useState([])\n    const { path, lang } = match.params\n\n    const parsePath = useCallback(\n        () => {\n            const pathlist = path ? path.split(\"/\") : []\n            const breadCrumbs = []\n            let currentModule = selectedLang\n            let breadcrumbpath = \"/\" + lang\n            const finalParent = pathlist[pathlist.length - 1]\n            for (let slug of pathlist) {\n                if (finalParent === slug) {\n                    let sideBarList = []\n                    for (let key in currentModule.options){\n                        if(finalParent !== key){\n                            sideBarList.push({\n                                title: currentModule.options[key].title,\n                                path: key\n                            })\n                        }\n                    }\n                    setSideBarListState(sideBarList)\n                }\n                if (!currentModule.options) {\n                    break\n                }\n                if (currentModule.options[slug]) {\n                    breadcrumbpath += \"/\" + slug\n                    breadCrumbs.push({title: currentModule.options[slug].title, path: breadcrumbpath})\n                    currentModule = currentModule.options[slug]\n                } else {\n                    setNotFound(true)\n                }\n            }\n            setBreadCrumbs(breadCrumbs)\n            setModule(currentModule)\n        },\n        [path, lang, selectedLang],\n    );\n\n    const selectLang = useCallback(\n        () => {\n            if(SupportedLanguages[lang]){\n                setSelectedLang(SupportedLanguages[lang])\n                setBreadCrumbs([{title: lang.title, path: \"/\" + lang}])\n            } else {\n                setNotFound(true)\n            }\n        },\n        [lang],\n    );\n\n    useEffect(() => {\n        selectLang();\n        parsePath();\n    }, [location.pathname, parsePath, selectLang]);\n    \n    return (\n        <LangContext.Provider value={selectedLang}>\n            <MainLayout key={location.pathname}>\n                <HeroUnit title={path ? module.title : selectedLang.literals.how_can_we_help} breadCrumbs={breadCrumbs} />\n                <ContentWrapper sideBarList={sideBarListState} main={module.content} />\n                <Cards options={module.options} />\n                {notFound ? <Redirect to=\"/404\" /> : null}\n            </MainLayout>\n        </LangContext.Provider>\n    )\n}\n\nexport default withRouter(Navigator)","import React, { useEffect, useState, useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from '@material-ui/core/Grow';\n\nimport LangContext from \"../../utils/LangContext\"\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 9),\n  },\n  welcome: {\n    marginBottom: \"0px\",\n  }\n}));\n\nexport default function LandingHeroUnit({ title, breadCrumbs }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n  const { literals } = useContext(LangContext)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <Grow in={checked} timeout={1000}>\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography\n            className={classes.welcome}\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            {literals.welcome}\n          </Typography>\n          <Typography\n            className={classes.chooseLang}\n            component=\"h2\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {literals.choose_lang}\n          </Typography>\n        </Container>\n      </div>\n    </Grow>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport en from \"../../lang/en.json\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst supportedLangs = [en]\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\"\n    }\n}));\n\nexport default function LangCards() {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    return (\n        <LangContext.Provider value={en}>\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <Grid container spacing={4}>\n                    {supportedLangs.map((lang, index) => (\n                        <Grid item key={index} xs={12} sm={6} md={4}>\n                            <Grow in={checked} timeout={1000}>\n                                <CardActionArea className={classes.link} to={\"/\" + lang.slug} component={Link}>\n                                    <Card className={classes.card}>\n                                        <CardMedia\n                                            className={classes.cardMedia}\n                                            image=\"https://via.placeholder.com/265x150.webp\"\n                                            title=\"Image title\"\n                                        />\n                                        <CardContent className={classes.cardContent}>\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                {lang.title}\n                                            </Typography>\n                                        </CardContent>\n                                        <CardActions>\n                                            <Typography color=\"primary\" component=\"p\">\n                                                {lang.literals.choose}\n                                            </Typography>\n                                        </CardActions>\n                                    </Card>\n\n                                </CardActionArea>\n                            </Grow>\n\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n        </LangContext.Provider>\n    );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport LandingHeroUnit from \"../components/LandingHeroUnit\";\nimport LangCards from \"../components/LangCards\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <MainLayout>\n      <LandingHeroUnit />\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n            <LangCards />\n        </Grid>\n      </Container>\n    </MainLayout>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function NotFound(props) {\n  const classes = useStyles();\n\n  return (\n    <MainLayout>\n      <HeroUnit title=\"Page Not Found\" breadCrumbs={[{title: \"404\", path: \"/404\"}]} />\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n            Page Not Found\n        </Grid>\n      </Container>\n    </MainLayout>\n  );\n}\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport Navigator from './views/pages/Navigator'\nimport Home from './views/pages/Home'\nimport NotFound from './views/pages/NotFound'\n\nexport default function App() {\n    return (\n        <Router>\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/404\" component={NotFound} />\n                <Route path=\"/:lang/:path*\" component={Navigator} />\n            </Switch>\n        </Router>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0c9d4a\",\n    }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}