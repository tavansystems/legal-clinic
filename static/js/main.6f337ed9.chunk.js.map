{"version":3,"sources":["utils/LangContext.js","utils/PathContext.js","utils/SupportedLanguages.js","views/components/LanguageSelector.jsx","views/components/Footer.jsx","utils/NavigatorOptions.js","views/components/SearchResultList.jsx","views/components/SearchBar.jsx","views/components/Header.jsx","views/layouts/MainLayout.jsx","views/components/Cards.jsx","views/components/SideBarLinks.jsx","views/components/ContentCard.jsx","views/components/ContentWrapper.jsx","views/components/BreadCrumbs.jsx","views/components/HeroUnit.jsx","views/pages/Navigator.jsx","views/components/LandingHeroUnit.jsx","views/components/LangCards.jsx","views/pages/Home.jsx","views/pages/NotFound.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LangContext","React","createContext","en","lang","path","SupportedLanguages","fr","so","sw","am","useStyles","makeStyles","theme","langIcon","fontSize","marginRight","selectOption","display","select","background","inputInput","padding","spacing","border","paddingLeft","transition","transitions","create","width","breakpoints","up","LanguageSelector","classes","slug","useContext","PathContext","Select","labelId","id","value","label","nativeInput","disableUnderline","MenuItem","disabled","default","Typography","className","sourceTitle","style","alignItems","flexWrap","Object","keys","map","to","component","Link","title","footer","backgroundColor","palette","paper","langSelector","fade","borderRadius","shape","margin","common","white","Footer","literals","Grid","container","item","xs","md","variant","align","gutterBottom","app_name","color","disclaimer","copyright","target","href","app_org_link","org_name","Date","getFullYear","developed_by","rel","url","listRoot","position","maxWidth","inline","link","textDecoration","SearchResultList","results","length","List","result","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","content","slice","Divider","defaultProps","optionList","mapOptions","options","key","push","searchIcon","height","pointerEvents","justifyContent","inputRoot","Header","useState","searchValue","setSearchValue","InputBase","onChange","e","placeholder","search","root","input","inputProps","NavigatorOptions","filter","option","searchValLowerCase","toLowerCase","includes","flexGrow","icon","marginLeft","down","minWidth","AppBar","Toolbar","toolbar","noWrap","MainLayout","children","Fragment","CssBaseline","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","Cards","location","checked","setChecked","useEffect","Container","entries","index","sm","Grow","in","timeout","CardActionArea","Card","CardMedia","image","image_source","CardContent","CardActions","choose","pathname","withRouter","main","SideBarLinks","links","Paper","elevation","button","ContentCard","sidebar","column","ContentWrapper","sideBarList","sources","source","cardSize","showGraphic","maxLine","minLine","proxyUrl","marginTop","BreadCrumbs","currentTitle","Breadcrumbs","maxItems","separator","aria-label","home","heroContent","heroButtons","HeroUnit","breadCrumbs","justify","match","module","setModule","setBreadCrumbs","notFound","setNotFound","selectedLang","setSelectedLang","sideBarListState","setSideBarListState","params","parsePath","useCallback","pathlist","split","currentModule","breadcrumbpath","finalParent","selectLang","Provider","how_can_we_help","welcome","marginBottom","LandingHeroUnit","chooseLang","choose_lang","LangCards","langSlug","Home","NotFound","props","App","exact","Navigator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6f337ed9.chunk.js","sourcesContent":["import React from \"react\";\nimport en from \"../lang/en.json\";\n\nconst LangContext = React.createContext(en);\n\nexport default LangContext;\n","import React from \"react\";\n\nconst LangContext = React.createContext({\n    lang: \"\",\n    path: \"\",\n});\n\nexport default LangContext;\n","import en from \"../lang/en.json\";\nimport fr from \"../lang/fr.json\";\nimport so from \"../lang/so.json\";\nimport sw from \"../lang/sw.json\";\nimport am from \"../lang/am.json\";\n\nconst SupportedLanguages = {\n    en: en,\n    fr: fr,\n    so: so,\n    sw: sw,\n    am: am,\n};\n\nexport default SupportedLanguages;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PublicIcon from \"@material-ui/icons/Public\";\n\nimport SupportedLanguages from \"../../utils/SupportedLanguages\";\nimport LangContext from \"../../utils/LangContext\";\nimport PathContext from \"../../utils/PathContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    langIcon: {\n        fontSize: \"16px\",\n        marginRight: \"7px\",\n    },\n    selectOption: {\n        display: \"inline\",\n    },\n    select: {\n        \"&:focus\": {\n            background: \"inherit\",\n        },\n    },\n    inputInput: {\n        padding: theme.spacing(0, 1),\n        border: \"none\",\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"12ch\",\n            \"&:focus\": {\n                width: \"50ch\",\n            },\n        },\n    },\n}));\n\nfunction LanguageSelector() {\n    const classes = useStyles();\n    const { slug } = useContext(LangContext);\n    const { lang, path } = useContext(PathContext);\n\n    return (\n        <Select\n            labelId=\"lang-selector\"\n            id=\"lang-selector\"\n            value={lang === \"\" ? \"None\" : slug}\n            label=\"Language\"\n            classes={{\n                nativeInput: classes.inputInput,\n                select: classes.select,\n            }}\n            disableUnderline\n        >\n            <MenuItem value=\"None\" disabled default>\n                <Typography\n                    className={classes.sourceTitle}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        flexWrap: \"wrap\",\n                    }}\n                >\n                    <PublicIcon className={classes.langIcon} />\n                    <span>Select Your Language</span>\n                </Typography>\n            </MenuItem>\n            {Object.keys(SupportedLanguages).map((lang) => (\n                <MenuItem\n                    to={\n                        \"/\" + SupportedLanguages[lang].slug + \"/\" + (path || \"\")\n                    }\n                    component={Link}\n                    key={SupportedLanguages[lang].slug}\n                    value={SupportedLanguages[lang].slug}\n                >\n                    <Typography\n                        className={classes.sourceTitle}\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            flexWrap: \"wrap\",\n                        }}\n                    >\n                        <PublicIcon className={classes.langIcon} />\n                        <span>{SupportedLanguages[lang].title}</span>\n                    </Typography>\n                </MenuItem>\n            ))}\n        </Select>\n    );\n}\n\nexport default LanguageSelector;\n","import React, { useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\n\nimport LanguageSelector from \"./LanguageSelector\";\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n    langSelector: {\n        backgroundColor: fade(\"#eee\", 0.65),\n        borderRadius: theme.shape.borderRadius,\n        margin: \"20px auto 0\",\n        width: \"fit-content\",\n        padding: theme.spacing(0, 1),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n    },\n}));\n\nexport default function Footer() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <footer className={classes.footer}>\n            <Grid container>\n                <Grid item xs={12} md={4}></Grid>\n                <Grid item xs={12} md={4}>\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        {literals.app_name}\n                    </Typography>\n                    <Typography\n                        spacing=\"10\"\n                        align=\"center\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        {literals.disclaimer}\n                    </Typography>\n                    <div className={classes.langSelector}>\n                        <LanguageSelector />\n                    </div>\n                    <br />\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        align=\"center\"\n                    >\n                        {literals.copyright} ©{\" \"}\n                        <Link\n                            color=\"inherit\"\n                            target=\"_BLANK\"\n                            href={literals.app_org_link}\n                        >\n                            {literals.org_name}\n                        </Link>{\" \"}\n                        {new Date().getFullYear()}\n                        {\".\"}\n                        {literals.developed_by}{\" \"}\n                        <Link\n                            href=\"https://tavansystems.com\"\n                            target=\"_BLANK\"\n                            rel=\"noreferrer\"\n                        >\n                            Tavan Systems Inc.\n                        </Link>\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={4}></Grid>\n            </Grid>\n        </footer>\n    );\n}\n","import SupportedLanguages from \"./SupportedLanguages\";\n\nlet url;\nconst optionList = [];\nconst mapOptions = (options, path = \"/\") => {\n    for (let key in options) {\n        url = (path !== \"/\" ? path : \"\") + \"/\" + key;\n        optionList.push({\n            title: options[key].title,\n            path: url,\n            content: options[key].content ? options[key].content : null,\n        });\n        if (options[key].options) {\n            mapOptions(options[key].options, url);\n        }\n    }\n    url = \"\";\n};\nmapOptions(SupportedLanguages);\n\nexport default optionList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: \"black\",\n    },\n    listRoot: {\n        position: \"absolute\",\n        width: \"100%\",\n        maxWidth: \"70ch\",\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    link: {\n        textDecoration: \"none\",\n    },\n}));\n\nexport default function SearchResultList({ results }) {\n    const classes = useStyles();\n\n    if (results.length === 0) {\n        return <></>;\n    }\n\n    return (\n        <List className={classes.listRoot}>\n            {results.map((result) => (\n                <Link\n                    className={classes.link}\n                    key={result.path}\n                    to={result.path}\n                >\n                    <ListItem alignItems=\"flex-start\">\n                        <ListItemAvatar>\n                            <Avatar\n                                alt={result.title}\n                                src=\"https://via.placeholder.com/265x150.webp\"\n                            />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.title}\n                            primary={result.title}\n                            secondary={\n                                <ReactMarkdown>\n                                    {result.content !== null\n                                        ? result.content.slice(0, 100) + \"...\"\n                                        : \"\"}\n                                </ReactMarkdown>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </Link>\n            ))}\n        </List>\n    );\n}\n\nSearchResultList.defaultProps = {\n    results: [],\n};\n","import React, { useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LangContext from \"../../utils/LangContext\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport SearchResultList from \"./SearchResultList\";\n\nimport NavigatorOptions from \"../../utils/NavigatorOptions\";\n\nconst useStyles = makeStyles((theme) => ({\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"12ch\",\n            \"&:focus\": {\n                width: \"50ch\",\n            },\n        },\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const [searchValue, setSearchValue] = useState(\"\");\n    const { literals } = useContext(LangContext);\n\n    const optionsFilter = (option) => {\n        const searchValLowerCase = searchValue.toLowerCase();\n        if (option.content !== null)\n            return option.content.toLowerCase().includes(searchValLowerCase);\n        return option.title.toLowerCase().includes(searchValLowerCase);\n    };\n\n    return (\n        <div>\n            <div className={classes.searchIcon}>\n                <SearchIcon />\n            </div>\n            <InputBase\n                value={searchValue}\n                onChange={(e) => setSearchValue(e.target.value)}\n                placeholder={literals.search + \"…\"}\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n            />\n            {searchValue.length > 0 ? (\n                <SearchResultList\n                    results={NavigatorOptions.filter(optionsFilter)}\n                />\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n}\n","import React, { useContext } from \"react\"\n\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Gavel from \"@material-ui/icons/Gavel\"\nimport { fade, makeStyles } from \"@material-ui/core/styles\"\n\nimport LangContext from \"../../utils/LangContext\"\nimport SearchBar from \"./SearchBar\"\nimport LanguageSelector from \"./LanguageSelector\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n    langSelector: {\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        borderRadius: theme.shape.borderRadius,\n        marginLeft: 0,\n        padding: theme.spacing(0, 1),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    search: {\n        position: \"relative\",\n        marginRight: \"10px\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        minWidth: \"200px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(1),\n            width: \"auto\",\n        },\n    },\n}))\n\nexport default function Header() {\n    const classes = useStyles()\n    const { literals } = useContext(LangContext)\n\n    return (\n        <AppBar position=\"relative\">\n            <Toolbar className={classes.toolbar}>\n                <Gavel className={classes.icon} />\n                <Typography\n                    className={classes.title}\n                    variant=\"h6\"\n                    noWrap\n                    component=\"h1\"\n                >\n                    {literals.app_name}\n                </Typography>\n                <div className={classes.search}>\n                    <SearchBar />\n                </div>\n                <div className={classes.langSelector}>\n                    <LanguageSelector />\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\nimport Footer from \"../components/Footer\";\nimport Header from \"../components/Header\";\n\n// const useStyles = makeStyles((theme) => ({\n// }));\n\nexport default function MainLayout({ children }) {\n    // const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Header />\n            <main>{children}</main>\n            <Footer />\n        </React.Fragment>\n    );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\",\n    },\n}));\n\nfunction Cards({ options, location }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n    const { literals } = useContext(LangContext);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    if (options.length === 0) {\n        return <></>;\n    }\n\n    return (\n        <Container\n            key={location.pathname}\n            className={classes.cardGrid}\n            maxWidth=\"md\"\n        >\n            <Grid container spacing={4}>\n                {Object.entries(options).map(([key, option], index) => (\n                    <Grid item key={index} xs={12} sm={6} md={4}>\n                        <Grow in={checked} timeout={1000}>\n                            <CardActionArea\n                                className={classes.link}\n                                to={option.href}\n                                component={Link}\n                            >\n                                <Card className={classes.card}>\n                                    <CardMedia\n                                        className={classes.cardMedia}\n                                        image={option.image_source}\n                                        title={option.title}\n                                    />\n                                    <CardContent\n                                        className={classes.cardContent}\n                                    >\n                                        <Typography\n                                            gutterBottom\n                                            variant=\"h5\"\n                                            component=\"h2\"\n                                        >\n                                            {option.title}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Typography\n                                            color=\"primary\"\n                                            className={classes.choose}\n                                            component=\"p\"\n                                        >\n                                            {literals.choose}\n                                        </Typography>\n                                    </CardActions>\n                                </Card>\n                            </CardActionArea>\n                        </Grow>\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    );\n}\n\nCards.defaultProps = {\n    options: [],\n};\n\nexport default withRouter(Cards);\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LinkIcon from \"@material-ui/icons/Link\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\",\n    },\n}));\n\nfunction SideBarLinks({ links }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1}>\n                <List>\n                    {links.map((item) => (\n                        <Link\n                            className={classes.link}\n                            to={item.href}\n                            key={item.href}\n                        >\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <LinkIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        </Link>\n                    ))}\n                </List>\n            </Paper>\n        </Grow>\n    );\n}\n\nexport default SideBarLinks;\n","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport Grow from \"@material-ui/core/Grow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        margin: theme.spacing(0, 0, 5, 0),\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.down(\"sm\")]: {\n            padding: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function ContentCard({ content }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1} className={classes.paper}>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                    <ReactMarkdown>{content}</ReactMarkdown>\n                </Typography>\n            </Paper>\n        </Grow>\n    );\n}\n","import { useState, useEffect, useContext } from \"react\"\nimport { ReactTinyLink } from \"react-tiny-link\"\nimport Container from \"@material-ui/core/Container\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Grow from \"@material-ui/core/Grow\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Paper from \"@material-ui/core/Paper\"\nimport PublicIcon from \"@material-ui/icons/Public\"\n\nimport SideBarLinks from \"./SideBarLinks\"\nimport ContentCard from \"./ContentCard\"\nimport LangContext from \"../../utils/LangContext\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(6),\n        [theme.breakpoints.down(\"sm\")]: {\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n        },\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\",\n    },\n    sidebar: {\n        width: \"100%\",\n        padding: theme.spacing(1),\n    },\n    column: {\n        padding: theme.spacing(1),\n    },\n    paper: {\n        margin: theme.spacing(0, 0, 5, 0),\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.down(\"sm\")]: {\n            padding: theme.spacing(2),\n        },\n    },\n    sourceTitle: {\n        padding: theme.spacing(5),\n        color: \"black\",\n    },\n}))\n\nfunction ContentWrapper({ sideBarList, main, sources }) {\n    const classes = useStyles()\n    const [checked, setChecked] = useState(false)\n    const { literals } = useContext(LangContext)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    if (!main) {\n        return <></>\n    }\n\n    return (\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\n            <Grid container>\n                <Grid item md={9} className={classes.column}>\n                    <ContentCard content={main} />\n                    <Grow in={checked} timeout={1000}>\n                        <Paper elevation={1} className={classes.paper}>\n                            <Typography\n                                variant=\"h5\"\n                                color=\"textSecondary\"\n                                className={classes.sourceTitle}\n                                style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    flexWrap: \"wrap\",\n                                }}\n                            >\n                                <PublicIcon style={{ marginRight: \"10px\" }} />\n\n                                <span>{literals.sources}</span>\n                            </Typography>\n                            {sources &&\n                                sources.map((source) => (\n                                    <ReactTinyLink\n                                        key={source}\n                                        cardSize=\"small\"\n                                        showGraphic={true}\n                                        maxLine={3}\n                                        minLine={1}\n                                        width={1}\n                                        url={source}\n                                        proxyUrl=\"https://cors.bridged.cc\"\n                                    />\n                                ))}\n                        </Paper>\n                    </Grow>\n                </Grid>\n                <Grid item md={3} className={classes.sidebar}>\n                    <SideBarLinks links={sideBarList} />\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default ContentWrapper\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \"& > * + *\": {\n            marginTop: theme.spacing(2),\n        },\n    },\n    link: {\n        textDecoration: \"none\",\n        color: theme.palette.primary.main,\n    },\n}));\n\nexport default function BreadCrumbs({ path }) {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n    const currentTitle = path[path.length - 1]\n        ? path[path.length - 1][\"title\"]\n        : null;\n\n    return (\n        <div className={classes.root}>\n            <Breadcrumbs\n                maxItems={4}\n                separator={<NavigateNextIcon fontSize=\"small\" />}\n                aria-label=\"breadcrumb\"\n            >\n                <Link className={classes.link} color=\"inherit\" to=\"/\">\n                    {literals.home}\n                </Link>\n                {currentTitle &&\n                    path.slice(0, path.length - 1).map((link) => (\n                        <Link\n                            className={classes.link}\n                            key={link.path}\n                            to={link.path}\n                        >\n                            {link.title}\n                        </Link>\n                    ))}\n                {currentTitle && (\n                    <Typography color=\"textPrimary\">{currentTitle}</Typography>\n                )}\n            </Breadcrumbs>\n        </div>\n    );\n}\n\nBreadCrumbs.defaultProps = {\n    path: [{}],\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from \"@material-ui/core/Grow\";\n\nimport BreadCrumbs from \"./BreadCrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 9),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\nexport default function HeroUnit({ title, breadCrumbs }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <div className={classes.heroContent}>\n                <Container maxWidth=\"md\">\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h4\"\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        gutterBottom\n                    >\n                        {title}\n                    </Typography>\n                    {/* <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          DESC. PLACEHOLDER\n        </Typography> */}\n                    <div className={classes.heroButtons}>\n                        <Grid container spacing={2} justify=\"center\">\n                            <BreadCrumbs path={breadCrumbs} />\n                        </Grid>\n                    </div>\n                </Container>\n            </div>\n        </Grow>\n    );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { withRouter, Redirect } from \"react-router-dom\";\n\nimport LangContext from \"../../utils/LangContext\";\nimport PathContext from \"../../utils/PathContext\";\nimport MainLayout from \"../layouts/MainLayout\";\nimport Cards from \"../components/Cards\";\nimport ContentWrapper from \"../components/ContentWrapper\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nimport SupportedLanguages from \"../../utils/SupportedLanguages\";\n\nfunction Navigator({ location, match }) {\n    const [module, setModule] = useState({});\n    const [breadCrumbs, setBreadCrumbs] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n    const [selectedLang, setSelectedLang] = useState(SupportedLanguages.en);\n    const [sideBarListState, setSideBarListState] = useState([]);\n    const { path, lang } = match.params;\n\n    const parsePath = useCallback(() => {\n        const pathlist = path ? path.split(\"/\") : [];\n        const breadCrumbs = [];\n        let currentModule = selectedLang;\n        let breadcrumbpath = \"/\" + lang;\n        const finalParent = pathlist[pathlist.length - 1];\n        for (let slug of pathlist) {\n            if (finalParent === slug) {\n                let sideBarList = [];\n                for (let key in currentModule.options) {\n                    if (finalParent !== key) {\n                        sideBarList.push(currentModule.options[key]);\n                    }\n                }\n                setSideBarListState(sideBarList);\n            }\n            if (!currentModule.options) {\n                break;\n            }\n            if (currentModule.options[slug]) {\n                breadcrumbpath += \"/\" + slug;\n                breadCrumbs.push({\n                    title: currentModule.options[slug].title,\n                    path: breadcrumbpath,\n                });\n                currentModule = currentModule.options[slug];\n            } else {\n                setNotFound(true);\n            }\n        }\n        setBreadCrumbs(breadCrumbs);\n        setModule(currentModule);\n    }, [path, lang, selectedLang]);\n\n    const selectLang = useCallback(() => {\n        if (SupportedLanguages[lang]) {\n            setSelectedLang(SupportedLanguages[lang]);\n            setBreadCrumbs([{ title: lang.title, path: \"/\" + lang }]);\n        } else {\n            setNotFound(true);\n        }\n    }, [lang]);\n\n    useEffect(() => {\n        selectLang();\n        parsePath();\n    }, [location.pathname, parsePath, selectLang]);\n\n    return (\n        <PathContext.Provider value={match.params}>\n            <LangContext.Provider value={selectedLang}>\n                <MainLayout key={location.pathname}>\n                    <HeroUnit\n                        title={\n                            path\n                                ? module.title\n                                : selectedLang.literals.how_can_we_help\n                        }\n                        breadCrumbs={breadCrumbs}\n                    />\n                    <ContentWrapper\n                        sideBarList={sideBarListState}\n                        main={module.content}\n                        sources={module.sources}\n                    />\n                    <Cards options={module.options} />\n                    {notFound ? <Redirect to=\"/404\" /> : null}\n                </MainLayout>\n            </LangContext.Provider>\n        </PathContext.Provider>\n    );\n}\n\nexport default withRouter(Navigator);\n","import React, { useEffect, useState, useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from \"@material-ui/core/Grow\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 9),\n    },\n    welcome: {\n        marginBottom: \"0px\",\n    },\n}));\n\nexport default function LandingHeroUnit({ title, breadCrumbs }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n    const { literals } = useContext(LangContext);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <div className={classes.heroContent}>\n                <Container maxWidth=\"sm\">\n                    <Typography\n                        className={classes.welcome}\n                        component=\"h1\"\n                        variant=\"h2\"\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        gutterBottom\n                    >\n                        {literals.welcome}\n                    </Typography>\n                    <Typography\n                        className={classes.chooseLang}\n                        component=\"h2\"\n                        variant=\"h4\"\n                        align=\"center\"\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {literals.choose_lang}\n                    </Typography>\n                </Container>\n            </div>\n        </Grow>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport SupportedLanguages from \"../../utils/SupportedLanguages\";\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\",\n    },\n}));\n\nexport default function LangCards() {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    return (\n        <LangContext.Provider value={SupportedLanguages.en}>\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <Grid container spacing={4}>\n                    {Object.keys(SupportedLanguages)\n                        .map((langSlug) => SupportedLanguages[langSlug])\n                        .map((lang, index) => (\n                            <Grid item key={index} xs={12} sm={6} md={4}>\n                                <Grow in={checked} timeout={1000}>\n                                    <CardActionArea\n                                        className={classes.link}\n                                        to={\"/\" + lang.slug}\n                                        component={Link}\n                                    >\n                                        <Card className={classes.card}>\n                                            <CardMedia\n                                                className={classes.cardMedia}\n                                                image={lang.image}\n                                                title={lang.title}\n                                            />\n                                            <CardContent\n                                                className={classes.cardContent}\n                                            >\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h5\"\n                                                    component=\"h2\"\n                                                >\n                                                    {lang.title}\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions>\n                                                <Typography\n                                                    color=\"primary\"\n                                                    component=\"p\"\n                                                >\n                                                    {lang.literals.choose}\n                                                </Typography>\n                                            </CardActions>\n                                        </Card>\n                                    </CardActionArea>\n                                </Grow>\n                            </Grid>\n                        ))}\n                </Grid>\n            </Container>\n        </LangContext.Provider>\n    );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport LandingHeroUnit from \"../components/LandingHeroUnit\";\nimport LangCards from \"../components/LangCards\";\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Home() {\n    const classes = useStyles();\n\n    return (\n        <MainLayout>\n            <LandingHeroUnit />\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                {/* End hero unit */}\n                <Grid container spacing={4}>\n                    <LangCards />\n                </Grid>\n            </Container>\n        </MainLayout>\n    );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function NotFound(props) {\n    const classes = useStyles();\n\n    return (\n        <MainLayout>\n            <HeroUnit\n                title=\"Page Not Found\"\n                breadCrumbs={[{ title: \"404\", path: \"/404\" }]}\n            />\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <Grid container spacing={4}>\n                    Page Not Found\n                </Grid>\n            </Container>\n        </MainLayout>\n    );\n}\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Navigator from \"./views/pages/Navigator\";\nimport Home from \"./views/pages/Home\";\nimport NotFound from \"./views/pages/NotFound\";\n\nexport default function App() {\n    return (\n        <Router>\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/404\" component={NotFound} />\n                <Route path=\"/:lang/:path*\" component={Navigator} />\n            </Switch>\n        </Router>\n    );\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#0c9d4a\",\n        },\n    },\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <App />\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}