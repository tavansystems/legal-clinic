{"version":3,"sources":["utils/LangContext.js","utils/PathContext.js","utils/SupportedLanguages.js","views/components/LanguageSelector.jsx","views/components/Footer.jsx","utils/NavigatorOptions.js","views/components/SearchResultList.jsx","views/components/SearchBar.jsx","views/components/Header.jsx","views/layouts/MainLayout.jsx","views/components/Cards.jsx","views/components/SideBarLinks.jsx","views/components/ContentCard.jsx","views/components/ContentWrapper.jsx","views/components/BreadCrumbs.jsx","views/components/HeroUnit.jsx","views/pages/Navigator.jsx","views/components/LandingHeroUnit.jsx","views/components/LangCards.jsx","views/pages/Home.jsx","views/pages/NotFound.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LangContext","React","createContext","en","lang","path","SupportedLanguages","ar","fr","so","sw","am","kin","useStyles","makeStyles","theme","langIcon","fontSize","selectOption","display","select","background","inputInput","padding","spacing","border","paddingLeft","transition","transitions","create","width","breakpoints","up","optionText","margin","LanguageSelector","classes","slug","useContext","PathContext","Select","labelId","id","value","label","nativeInput","disableUnderline","MenuItem","disabled","default","Typography","className","sourceTitle","style","alignItems","flexWrap","Object","keys","map","to","component","Link","title","footer","backgroundColor","palette","paper","langSelector","fade","borderRadius","shape","common","white","Footer","literals","Grid","container","item","xs","md","variant","align","gutterBottom","app_name","color","disclaimer","copyright","target","href","app_org_link","org_name","Date","getFullYear","developed_by","rel","url","listRoot","position","maxWidth","inline","link","textDecoration","SearchResultList","results","length","List","result","ListItem","ListItemAvatar","Avatar","alt","src","image_source","ListItemText","primary","secondary","content","slice","Divider","defaultProps","optionList","mapOptions","options","key","push","searchIcon","height","pointerEvents","justifyContent","inputRoot","Header","useState","searchValue","setSearchValue","InputBase","onChange","e","placeholder","search","root","input","inputProps","NavigatorOptions","filter","option","searchValLowerCase","toLowerCase","includes","flexGrow","marginLeft","down","marginRight","minWidth","AppBar","Toolbar","toolbar","noWrap","MainLayout","children","Fragment","CssBaseline","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","Cards","location","checked","setChecked","useEffect","Container","entries","index","sm","Grow","in","timeout","CardActionArea","Card","CardMedia","image","CardContent","CardActions","choose","pathname","withRouter","main","listItemText","textAlign","SideBarLinks","links","Paper","elevation","button","disableTypography","ContentCard","sidebar","column","ContentWrapper","sideBarList","sources","source","cardSize","showGraphic","maxLine","minLine","proxyUrl","marginTop","BreadCrumbs","currentTitle","Breadcrumbs","maxItems","separator","aria-label","home","heroContent","heroButtons","HeroUnit","breadCrumbs","justify","match","module","setModule","setBreadCrumbs","notFound","setNotFound","selectedLang","setSelectedLang","sideBarListState","setSideBarListState","params","parsePath","useCallback","pathlist","split","currentModule","breadcrumbpath","finalParent","selectLang","document","body","dir","direction","console","log","Provider","Helmet","name","description","property","how_can_we_help","welcome","marginBottom","LandingHeroUnit","chooseLang","choose_lang","LangCards","langSlug","Home","NotFound","props","App","exact","Navigator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.1967ed4e.chunk.js","sourcesContent":["import React from \"react\";\nimport en from \"../lang/en.json\";\n\nconst LangContext = React.createContext(en);\n\nexport default LangContext;\n","import React from \"react\";\n\nconst LangContext = React.createContext({\n    lang: \"\",\n    path: \"\",\n});\n\nexport default LangContext;\n","import en from \"../lang/en.json\";\nimport fr from \"../lang/fr.json\";\nimport so from \"../lang/so.json\";\nimport sw from \"../lang/sw.json\";\nimport am from \"../lang/am.json\";\nimport kin from \"../lang/kin.json\";\nimport ar from \"../lang/ar.json\";\n\nconst SupportedLanguages = {\n    en: en,\n    ar: ar,\n    fr: fr,\n    so: so,\n    sw: sw,\n    am: am,\n    kin: kin,\n};\n\nexport default SupportedLanguages;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PublicIcon from \"@material-ui/icons/Public\";\n\nimport SupportedLanguages from \"../../utils/SupportedLanguages\";\nimport LangContext from \"../../utils/LangContext\";\nimport PathContext from \"../../utils/PathContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    langIcon: {\n        fontSize: \"16px\",\n    },\n    selectOption: {\n        display: \"inline\",\n    },\n    select: {\n        \"&:focus\": {\n            background: \"inherit\",\n        },\n    },\n    inputInput: {\n        padding: theme.spacing(0, 1),\n        border: \"none\",\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"12ch\",\n            \"&:focus\": {\n                width: \"50ch\",\n            },\n        },\n    },\n    optionText: { margin: \"0 7px\" },\n}));\n\nfunction LanguageSelector() {\n    const classes = useStyles();\n    const { slug } = useContext(LangContext);\n    const { lang, path } = useContext(PathContext);\n\n    return (\n        <Select\n            labelId=\"lang-selector\"\n            id=\"lang-selector\"\n            value={lang === \"\" ? \"None\" : slug}\n            label=\"Language\"\n            classes={{\n                nativeInput: classes.inputInput,\n                select: classes.select,\n            }}\n            disableUnderline\n        >\n            <MenuItem value=\"None\" disabled default>\n                <Typography\n                    className={classes.sourceTitle}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        flexWrap: \"wrap\",\n                    }}\n                >\n                    <PublicIcon className={classes.langIcon} />\n                    <span className={classes.optionText}>\n                        Select Your Language\n                    </span>\n                </Typography>\n            </MenuItem>\n            {Object.keys(SupportedLanguages).map((lang) => (\n                <MenuItem\n                    to={\n                        \"/\" + SupportedLanguages[lang].slug + \"/\" + (path || \"\")\n                    }\n                    component={Link}\n                    key={SupportedLanguages[lang].slug}\n                    value={SupportedLanguages[lang].slug}\n                >\n                    <Typography\n                        className={classes.sourceTitle}\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            flexWrap: \"wrap\",\n                        }}\n                    >\n                        <PublicIcon className={classes.langIcon} />\n                        <span className={classes.optionText}>\n                            {SupportedLanguages[lang].title}\n                        </span>\n                    </Typography>\n                </MenuItem>\n            ))}\n        </Select>\n    );\n}\n\nexport default LanguageSelector;\n","import React, { useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\n\nimport LanguageSelector from \"./LanguageSelector\";\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n    langSelector: {\n        backgroundColor: fade(\"#eee\", 0.65),\n        borderRadius: theme.shape.borderRadius,\n        margin: \"20px auto 0\",\n        width: \"fit-content\",\n        padding: theme.spacing(0, 1),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n    },\n}));\n\nexport default function Footer() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <footer className={classes.footer}>\n            <Grid container>\n                <Grid item xs={12} md={4}></Grid>\n                <Grid item xs={12} md={4}>\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        {literals.app_name}\n                    </Typography>\n                    <Typography\n                        spacing=\"10\"\n                        align=\"center\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        {literals.disclaimer}\n                    </Typography>\n                    <div className={classes.langSelector}>\n                        <LanguageSelector />\n                    </div>\n                    <br />\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        align=\"center\"\n                    >\n                        {literals.copyright} ©{\" \"}\n                        <Link\n                            color=\"inherit\"\n                            target=\"_BLANK\"\n                            href={literals.app_org_link}\n                        >\n                            {literals.org_name}\n                        </Link>{\" \"}\n                        {new Date().getFullYear()}\n                        {\". \"}\n                        {literals.developed_by}{\" \"}\n                        <Link\n                            href=\"https://tavansystems.com\"\n                            target=\"_BLANK\"\n                            rel=\"noreferrer\"\n                        >\n                            Tavan Systems Inc.\n                        </Link>\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={4}></Grid>\n            </Grid>\n        </footer>\n    );\n}\n","import SupportedLanguages from \"./SupportedLanguages\";\n\nlet url;\nconst optionList = [];\nconst mapOptions = (options, path = \"/\") => {\n    for (let key in options) {\n        url = (path !== \"/\" ? path : \"\") + \"/\" + key;\n        optionList.push({\n            title: options[key].title,\n            path: url,\n            content: options[key].content ? options[key].content : null,\n            image_source: options[key].image_source,\n        });\n        if (options[key].options) {\n            mapOptions(options[key].options, url);\n        }\n    }\n    url = \"\";\n};\nmapOptions(SupportedLanguages);\n\nexport default optionList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: \"black\",\n    },\n    listRoot: {\n        position: \"absolute\",\n        width: \"100%\",\n        maxWidth: \"70ch\",\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    link: {\n        textDecoration: \"none\",\n    },\n}));\n\nexport default function SearchResultList({ results }) {\n    const classes = useStyles();\n\n    if (results.length === 0) {\n        return <></>;\n    }\n\n    return (\n        <List className={classes.listRoot}>\n            {results.map((result) => (\n                <Link\n                    className={classes.link}\n                    key={result.path}\n                    to={result.path}\n                >\n                    <ListItem alignItems=\"flex-start\">\n                        <ListItemAvatar>\n                            <Avatar\n                                alt={result.title}\n                                src={result.image_source}\n                            />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.title}\n                            primary={result.title}\n                            secondary={\n                                <ReactMarkdown>\n                                    {result.content !== null\n                                        ? result.content.slice(0, 100) + \"...\"\n                                        : \"\"}\n                                </ReactMarkdown>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </Link>\n            ))}\n        </List>\n    );\n}\n\nSearchResultList.defaultProps = {\n    results: [],\n};\n","import React, { useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LangContext from \"../../utils/LangContext\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport SearchResultList from \"./SearchResultList\";\n\nimport NavigatorOptions from \"../../utils/NavigatorOptions\";\n\nconst useStyles = makeStyles((theme) => ({\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"12ch\",\n            \"&:focus\": {\n                width: \"50ch\",\n            },\n        },\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const [searchValue, setSearchValue] = useState(\"\");\n    const { literals } = useContext(LangContext);\n\n    const optionsFilter = (option) => {\n        const searchValLowerCase = searchValue.toLowerCase();\n        if (option.content !== null)\n            return option.content.toLowerCase().includes(searchValLowerCase);\n        return option.title.toLowerCase().includes(searchValLowerCase);\n    };\n\n    return (\n        <div>\n            <div className={classes.searchIcon}>\n                <SearchIcon />\n            </div>\n            <InputBase\n                value={searchValue}\n                onChange={(e) => setSearchValue(e.target.value)}\n                placeholder={literals.search + \"…\"}\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n            />\n            {searchValue.length > 0 ? (\n                <SearchResultList\n                    results={NavigatorOptions.filter(optionsFilter)}\n                />\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n}\n","import React, { useContext } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\nimport LangContext from \"../../utils/LangContext\";\nimport SearchBar from \"./SearchBar\";\nimport LanguageSelector from \"./LanguageSelector\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        margin: theme.spacing(0, 2),\n        flexGrow: 1,\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n    langSelector: {\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        borderRadius: theme.shape.borderRadius,\n        marginLeft: 0,\n        padding: theme.spacing(0, 1),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    search: {\n        position: \"relative\",\n        marginRight: \"10px\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        minWidth: \"200px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(1),\n            width: \"auto\",\n        },\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <AppBar position=\"relative\">\n            <Toolbar className={classes.toolbar}>\n                <img src=\"/logo.jpeg\" style={{width: '150px', margin: '10px', borderRadius: '20px', }} alt=\"MFSO logo\" />\n                <Typography\n                    className={classes.title}\n                    variant=\"h6\"\n                    noWrap\n                    component=\"h1\"\n                >\n                    {literals.app_name}\n                </Typography>\n                <div className={classes.search}>\n                    <SearchBar />\n                </div>\n                <div className={classes.langSelector}>\n                    <LanguageSelector />\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\nimport Footer from \"../components/Footer\";\nimport Header from \"../components/Header\";\n\n// const useStyles = makeStyles((theme) => ({\n// }));\n\nexport default function MainLayout({ children }) {\n    // const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Header />\n            <main>{children}</main>\n            <Footer />\n        </React.Fragment>\n    );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\",\n    },\n}));\n\nfunction Cards({ options, location }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n    const { literals } = useContext(LangContext);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    if (options.length === 0) {\n        return <></>;\n    }\n\n    return (\n        <Container\n            key={location.pathname}\n            className={classes.cardGrid}\n            maxWidth=\"md\"\n        >\n            <Grid container spacing={4}>\n                {Object.entries(options).map(([key, option], index) => (\n                    <Grid item key={index} xs={12} sm={6} md={4}>\n                        <Grow in={checked} timeout={1000}>\n                            <CardActionArea\n                                className={classes.link}\n                                to={option.href}\n                                component={Link}\n                            >\n                                <Card className={classes.card}>\n                                    <CardMedia\n                                        className={classes.cardMedia}\n                                        image={option.image_source}\n                                        title={option.title}\n                                    />\n                                    <CardContent\n                                        className={classes.cardContent}\n                                    >\n                                        <Typography\n                                            gutterBottom\n                                            variant=\"h5\"\n                                            component=\"h2\"\n                                        >\n                                            {option.title}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Typography\n                                            color=\"primary\"\n                                            className={classes.choose}\n                                            component=\"p\"\n                                        >\n                                            {literals.choose}\n                                        </Typography>\n                                    </CardActions>\n                                </Card>\n                            </CardActionArea>\n                        </Grow>\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    );\n}\n\nCards.defaultProps = {\n    options: [],\n};\n\nexport default withRouter(Cards);\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LinkIcon from \"@material-ui/icons/Link\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\",\n    },\n    listItemText: { textAlign: \"start\", fontSize: \"1.2rem\" },\n}));\n\nfunction SideBarLinks({ links }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1}>\n                <List>\n                    {links.map((item) => (\n                        <Link\n                            className={classes.link}\n                            to={item.href}\n                            key={item.href}\n                        >\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <LinkIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    className={classes.listItemText}\n                                    primary={item.title}\n                                    disableTypography={true}\n                                />\n                            </ListItem>\n                        </Link>\n                    ))}\n                </List>\n            </Paper>\n        </Grow>\n    );\n}\n\nexport default SideBarLinks;\n","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport Grow from \"@material-ui/core/Grow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        margin: theme.spacing(0, 0, 5, 0),\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.down(\"sm\")]: {\n            padding: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function ContentCard({ content }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1} className={classes.paper}>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                    <ReactMarkdown>{content}</ReactMarkdown>\n                </Typography>\n            </Paper>\n        </Grow>\n    );\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport { ReactTinyLink } from \"react-tiny-link\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PublicIcon from \"@material-ui/icons/Public\";\n\nimport SideBarLinks from \"./SideBarLinks\";\nimport ContentCard from \"./ContentCard\";\nimport LangContext from \"../../utils/LangContext\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(6),\n        [theme.breakpoints.down(\"sm\")]: {\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n        },\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\",\n    },\n    sidebar: {\n        width: \"100%\",\n        padding: theme.spacing(1),\n    },\n    column: {\n        padding: theme.spacing(1),\n    },\n    paper: {\n        margin: theme.spacing(0, 0, 5, 0),\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.down(\"sm\")]: {\n            padding: theme.spacing(2),\n        },\n    },\n    sourceTitle: {\n        padding: theme.spacing(5),\n        color: \"black\",\n    },\n}));\n\nfunction ContentWrapper({ sideBarList, main, sources }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n    const { literals } = useContext(LangContext);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    if (!main) {\n        return <></>;\n    }\n\n    return (\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\n            <Grid container>\n                <Grid item md={9} className={classes.column}>\n                    <ContentCard content={main} />\n                    <Grow in={checked} timeout={1000}>\n                        <Paper elevation={1} className={classes.paper}>\n                            <Typography\n                                variant=\"h5\"\n                                color=\"textSecondary\"\n                                className={classes.sourceTitle}\n                                style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    flexWrap: \"wrap\",\n                                }}\n                            >\n                                <PublicIcon />\n                                <span style={{ margin: \"0 10px\" }}>\n                                    {literals.sources}\n                                </span>\n                            </Typography>\n                            {sources &&\n                                sources.map((source) => (\n                                    <ReactTinyLink\n                                        key={source}\n                                        cardSize=\"small\"\n                                        showGraphic={true}\n                                        maxLine={3}\n                                        minLine={1}\n                                        width={1}\n                                        url={source}\n                                        proxyUrl=\"https://cors.bridged.cc\"\n                                    />\n                                ))}\n                        </Paper>\n                    </Grow>\n                </Grid>\n                <Grid item md={3} className={classes.sidebar}>\n                    <SideBarLinks links={sideBarList} />\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default ContentWrapper;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \"& > * + *\": {\n            marginTop: theme.spacing(2),\n        },\n    },\n    link: {\n        textDecoration: \"none\",\n        color: theme.palette.primary.main,\n    },\n}));\n\nexport default function BreadCrumbs({ path }) {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n    const currentTitle = path[path.length - 1]\n        ? path[path.length - 1][\"title\"]\n        : null;\n\n    return (\n        <div className={classes.root}>\n            <Breadcrumbs\n                maxItems={4}\n                separator={<NavigateNextIcon fontSize=\"small\" />}\n                aria-label=\"breadcrumb\"\n            >\n                <Link className={classes.link} color=\"inherit\" to=\"/\">\n                    {literals.home}\n                </Link>\n                {currentTitle &&\n                    path.slice(0, path.length - 1).map((link) => (\n                        <Link\n                            className={classes.link}\n                            key={link.path}\n                            to={link.path}\n                        >\n                            {link.title}\n                        </Link>\n                    ))}\n                {currentTitle && (\n                    <Typography color=\"textPrimary\">{currentTitle}</Typography>\n                )}\n            </Breadcrumbs>\n        </div>\n    );\n}\n\nBreadCrumbs.defaultProps = {\n    path: [{}],\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from \"@material-ui/core/Grow\";\n\nimport BreadCrumbs from \"./BreadCrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 9),\n        border: '1px solid rgba(0, 0, 0, 0.17)'\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\nexport default function HeroUnit({ title, breadCrumbs }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <div className={classes.heroContent}>\n                <Container maxWidth=\"md\">\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h4\"\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        gutterBottom\n                    >\n                        {title}\n                    </Typography>\n                    {/* <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          DESC. PLACEHOLDER\n        </Typography> */}\n                    <div className={classes.heroButtons}>\n                        <Grid container spacing={2} justify=\"center\">\n                            <BreadCrumbs path={breadCrumbs} />\n                        </Grid>\n                    </div>\n                </Container>\n            </div>\n        </Grow>\n    );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\n\nimport LangContext from \"../../utils/LangContext\";\nimport PathContext from \"../../utils/PathContext\";\nimport MainLayout from \"../layouts/MainLayout\";\nimport Cards from \"../components/Cards\";\nimport ContentWrapper from \"../components/ContentWrapper\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nimport SupportedLanguages from \"../../utils/SupportedLanguages\";\n\nfunction Navigator({ location, match }) {\n    const [module, setModule] = useState({});\n    const [breadCrumbs, setBreadCrumbs] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n    const [selectedLang, setSelectedLang] = useState(SupportedLanguages.en);\n    const [sideBarListState, setSideBarListState] = useState([]);\n    const { path, lang } = match.params;\n\n    const parsePath = useCallback(() => {\n        const pathlist = path ? path.split(\"/\") : [];\n        const breadCrumbs = [];\n        let currentModule = selectedLang;\n        let breadcrumbpath = \"/\" + lang;\n        const finalParent = pathlist[pathlist.length - 1];\n        for (let slug of pathlist) {\n            if (finalParent === slug) {\n                let sideBarList = [];\n                for (let key in currentModule.options) {\n                    if (finalParent !== key) {\n                        sideBarList.push(currentModule.options[key]);\n                    }\n                }\n                setSideBarListState(sideBarList);\n            }\n            if (!currentModule.options) {\n                break;\n            }\n            if (currentModule.options[slug]) {\n                breadcrumbpath += \"/\" + slug;\n                breadCrumbs.push({\n                    title: currentModule.options[slug].title,\n                    path: breadcrumbpath,\n                });\n                currentModule = currentModule.options[slug];\n            } else {\n                setNotFound(true);\n            }\n        }\n        setBreadCrumbs(breadCrumbs);\n        setModule(currentModule);\n    }, [path, lang, selectedLang]);\n\n    const selectLang = useCallback(() => {\n        if (SupportedLanguages[lang]) {\n            document.body.dir = SupportedLanguages[lang].direction;\n            setSelectedLang(SupportedLanguages[lang]);\n            setBreadCrumbs([{ title: lang.title, path: \"/\" + lang }]);\n        } else {\n            setNotFound(true);\n        }\n    }, [lang]);\n\n    useEffect(() => {\n        selectLang();\n        parsePath();\n    }, [location.pathname, parsePath, selectLang]);\n\n    const getExcerpt = () => {\n        document.title = module.title;\n        if (module.content) {\n            return (document.description = module.content.slice(0, 100));\n        } else {\n            return \"\";\n        }\n    };\n\n    console.log(selectedLang.slug);\n    return (\n        <PathContext.Provider value={match.params}>\n            <LangContext.Provider value={selectedLang}>\n                <MainLayout key={location.pathname}>\n                    <Helmet>\n                        <title>{module.title}</title>\n                        <meta name=\"description\" content={getExcerpt()} />\n                        <meta\n                            property=\"og:type\"\n                            content={module.image_source}\n                        />\n                    </Helmet>\n                    <HeroUnit\n                        title={\n                            path\n                                ? module.title\n                                : selectedLang.literals.how_can_we_help\n                        }\n                        breadCrumbs={breadCrumbs}\n                    />\n                    <ContentWrapper\n                        sideBarList={sideBarListState}\n                        main={module.content}\n                        sources={module.sources}\n                    />\n                    <Cards options={module.options} />\n                    {notFound ? <Redirect to=\"/404\" /> : null}\n                </MainLayout>\n            </LangContext.Provider>\n        </PathContext.Provider>\n    );\n}\n\nexport default withRouter(Navigator);\n","import React, { useEffect, useState, useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from \"@material-ui/core/Grow\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 9),\n        border: '1px solid rgba(0, 0, 0, 0.17)'\n    },\n    welcome: {\n        marginBottom: \"0px\",\n    },\n}));\n\nexport default function LandingHeroUnit({ title, breadCrumbs }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n    const { literals } = useContext(LangContext);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <div className={classes.heroContent}>\n                <Container maxWidth=\"sm\">\n                    <Typography\n                        className={classes.welcome}\n                        component=\"h1\"\n                        variant=\"h2\"\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        gutterBottom\n                    >\n                        {literals.welcome}\n                    </Typography>\n                    <Typography\n                        className={classes.chooseLang}\n                        component=\"h2\"\n                        variant=\"h4\"\n                        align=\"center\"\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {literals.choose_lang}\n                    </Typography>\n                </Container>\n            </div>\n        </Grow>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport SupportedLanguages from \"../../utils/SupportedLanguages\";\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\",\n    },\n}));\n\nexport default function LangCards() {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        setChecked(true);\n    }, [setChecked]);\n\n    return (\n        <LangContext.Provider value={SupportedLanguages.en}>\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <Grid container spacing={4}>\n                    {Object.keys(SupportedLanguages)\n                        .map((langSlug) => SupportedLanguages[langSlug])\n                        .map((lang, index) => (\n                            <Grid item key={index} xs={12} sm={6} md={4}>\n                                <Grow in={checked} timeout={1000}>\n                                    <CardActionArea\n                                        className={classes.link}\n                                        to={\"/\" + lang.slug}\n                                        component={Link}\n                                    >\n                                        <Card className={classes.card}>\n                                            <CardMedia\n                                                className={classes.cardMedia}\n                                                image={lang.image}\n                                                title={lang.title}\n                                            />\n                                            <CardContent\n                                                className={classes.cardContent}\n                                            >\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h5\"\n                                                    component=\"h2\"\n                                                >\n                                                    {lang.title}\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions>\n                                                <Typography\n                                                    color=\"primary\"\n                                                    component=\"p\"\n                                                >\n                                                    {lang.literals.choose}\n                                                </Typography>\n                                            </CardActions>\n                                        </Card>\n                                    </CardActionArea>\n                                </Grow>\n                            </Grid>\n                        ))}\n                </Grid>\n            </Container>\n        </LangContext.Provider>\n    );\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport LandingHeroUnit from \"../components/LandingHeroUnit\";\nimport LangCards from \"../components/LangCards\";\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Home() {\n    const classes = useStyles();\n    document.body.dir = \"ltr\";\n    return (\n        <MainLayout>\n            <Helmet>\n                <title>MFSO Legal Clinic</title>\n            </Helmet>\n            <LandingHeroUnit />\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                {/* End hero unit */}\n                <Grid container spacing={4}>\n                    <LangCards />\n                </Grid>\n            </Container>\n        </MainLayout>\n    );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function NotFound(props) {\n    const classes = useStyles();\n\n    return (\n        <MainLayout>\n            <HeroUnit\n                title=\"Page Not Found\"\n                breadCrumbs={[{ title: \"404\", path: \"/404\" }]}\n            />\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <Grid container spacing={4}>\n                    Page Not Found\n                </Grid>\n            </Container>\n        </MainLayout>\n    );\n}\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Navigator from \"./views/pages/Navigator\";\nimport Home from \"./views/pages/Home\";\nimport NotFound from \"./views/pages/NotFound\";\n\nexport default function App() {\n    return (\n        <Router>\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/404\" component={NotFound} />\n                <Route path=\"/:lang/:path*\" component={Navigator} />\n            </Switch>\n        </Router>\n    );\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#0F4343\",\n        },\n    },\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <App />\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}