{"version":3,"sources":["utils/LangContext.js","views/components/Footer.jsx","views/components/SearchResultList.jsx","utils/SupportedLanguages.js","utils/NavigatorOptions.js","views/components/SearchBar.jsx","views/components/Header.jsx","views/layouts/MainLayout.jsx","views/components/Cards.jsx","views/components/SideBarLinks.jsx","views/components/ContentCard.jsx","views/components/ContentWrapper.jsx","views/components/BreadCrumbs.jsx","views/components/HeroUnit.jsx","views/pages/Navigator.jsx","views/components/LandingHeroUnit.jsx","views/components/LangCards.jsx","views/pages/Home.jsx","views/pages/NotFound.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LangContext","React","createContext","en","useStyles","makeStyles","theme","footer","backgroundColor","palette","background","paper","padding","spacing","Footer","classes","literals","useContext","className","Grid","container","item","xs","md","Typography","variant","align","gutterBottom","app_name","color","component","disclaimer","copyright","Link","target","href","mfso","Date","getFullYear","title","listRoot","position","width","maxWidth","inline","display","link","textDecoration","SearchResultList","results","length","List","map","result","to","path","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","content","slice","Divider","defaultProps","url","SupportedLanguages","optionList","mapOptions","options","key","push","searchIcon","height","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","breakpoints","up","Header","useState","searchValue","setSearchValue","InputBase","value","onChange","e","placeholder","search","root","input","inputProps","NavigatorOptions","filter","option","searchValLowerCase","toLowerCase","includes","flexGrow","icon","marginRight","borderRadius","shape","fade","common","white","marginLeft","minWidth","AppBar","Toolbar","noWrap","MainLayout","children","Fragment","CssBaseline","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","Cards","location","checked","setChecked","useEffect","Container","Object","entries","index","sm","Grow","in","timeout","pathname","CardActionArea","Card","CardMedia","image","CardContent","CardActions","choose","withRouter","main","SideBarLinks","links","Paper","elevation","button","ContentCard","ContentWrapper","sideBarList","column","marginTop","BreadCrumbs","currentTitle","Breadcrumbs","maxItems","separator","fontSize","aria-label","home","heroContent","heroButtons","HeroUnit","breadCrumbs","justify","match","module","setModule","setBreadCrumbs","notFound","setNotFound","selectedLang","setSelectedLang","sideBarListState","setSideBarListState","params","lang","parsePath","useCallback","pathlist","split","currentModule","breadcrumbpath","finalParent","slug","selectLang","Provider","welcome","marginBottom","LandingHeroUnit","chooseLang","choose_lang","supportedLangs","LangCards","Home","NotFound","props","App","exact","Navigator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"uMAKeA,EAFKC,IAAMC,cAAcC,G,4CCKlCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACJC,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,QAASN,EAAMO,QAAQ,QAIhB,SAASC,IACpB,IAAMC,EAAUX,IACRY,EAAaC,qBAAWjB,GAAxBgB,SAER,OACI,wBAAQE,UAAWH,EAAQR,OAA3B,SACI,eAACY,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IACvB,eAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,cAAY,EAApD,SACKX,EAASY,WAEd,cAACJ,EAAA,EAAD,CAAYX,QAAQ,KAAKa,MAAM,SAASG,MAAM,gBAAgBC,UAAU,IAAxE,SACKd,EAASe,aAEd,uBACA,eAACP,EAAA,EAAD,CAAYC,QAAQ,QAAQI,MAAM,gBAAgBH,MAAM,SAAxD,UACKV,EAASgB,UADd,QAEI,eAACC,EAAA,EAAD,CAAMJ,MAAM,UAAUK,OAAO,SAASC,KAAK,kBAA3C,UACK,IAAKnB,EAASoB,QACX,KACP,IAAIC,MAAOC,cACX,UAGT,cAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,S,wJC1BjCnB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiC,MAAO,CACHV,MAAO,SAEXW,SAAU,CACNC,SAAU,WACVC,MAAO,OACPC,SAAU,OACVnC,gBAAiBF,EAAMG,QAAQC,WAAWC,OAE9CiC,OAAQ,CACJC,QAAS,UAEbC,KAAM,CACFC,eAAgB,YAIT,SAASC,EAAT,GAAwC,IAAZC,EAAW,EAAXA,QACjClC,EAAUX,IAEhB,OAAuB,IAAnB6C,EAAQC,OACA,6BAIR,cAACC,EAAA,EAAD,CAAMjC,UAAWH,EAAQyB,SAAzB,SACKS,EAAQG,KAAI,SAACC,GAAD,OACT,eAAC,IAAD,CAAMnC,UAAWH,EAAQ+B,KAAwBQ,GAAID,EAAOE,KAA5D,UACI,eAACC,EAAA,EAAD,CAAUC,WAAW,aAArB,UAEI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,IAAKP,EAAOd,MAAOsB,IAAI,+CAEnC,cAACC,EAAA,EAAD,CACI5C,UAAWH,EAAQwB,MACnBwB,QAASV,EAAOd,MAChByB,UACI,cAAC,IAAD,UACuB,OAAnBX,EAAOY,QAAmBZ,EAAOY,QAAQC,MAAM,EAAG,KAAM,MAAQ,UAKhF,cAACC,EAAA,EAAD,CAAS1C,QAAQ,QAAQK,UAAU,SAhBHuB,EAAOE,WAwB3DP,EAAiBoB,aAAe,CAC5BnB,QAAS,ICjEb,ICAIoB,EDIWC,EAJY,CACvBnE,GAAIA,GCAFoE,EAAa,IACA,SAAbC,EAAcC,GAAyB,IAAhBlB,EAAe,uDAAR,IAChC,IAAK,IAAImB,KAAOD,EACZJ,GAAgB,MAATd,EAAeA,EAAO,IAAM,IAAMmB,EACzCH,EAAWI,KAAK,CACZpC,MAAOkC,EAAQC,GAAKnC,MACpBgB,KAAMc,EACNJ,QAASQ,EAAQC,GAAKT,QAAUQ,EAAQC,GAAKT,QAAU,OAEvDQ,EAAQC,GAAKD,SACbD,EAAWC,EAAQC,GAAKD,QAASJ,GAGzCA,EAAM,GAEVG,CAAWF,GAEIC,QCRTnE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsE,WAAY,CACRhE,QAASN,EAAMO,QAAQ,EAAG,GAC1BgE,OAAQ,OACRpC,SAAU,WACVqC,cAAe,OACfjC,QAAS,OACTY,WAAY,SACZsB,eAAgB,UAEpBC,UAAW,CACPnD,MAAO,WAEXoD,WAAW,aACPrE,QAASN,EAAMO,QAAQ,EAAG,EAAG,EAAG,GAEhCqE,YAAY,cAAD,OAAgB5E,EAAMO,QAAQ,GAA9B,OACXsE,WAAY7E,EAAM8E,YAAYC,OAAO,SACrC3C,MAAO,QACNpC,EAAMgF,YAAYC,GAAG,MAAQ,CAC1B7C,MAAO,OACP,UAAW,CACPA,MAAO,cAMR,SAAS8C,IACpB,IAAMzE,EAAUX,IADa,EAESqF,mBAAS,IAFlB,mBAEtBC,EAFsB,KAETC,EAFS,KAGrB3E,EAAaC,qBAAWjB,GAAxBgB,SAQR,OACI,gCACI,qBAAKE,UAAWH,EAAQ6D,WAAxB,SACI,cAAC,IAAD,MAEJ,cAACgB,EAAA,EAAD,CACIC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAeI,EAAE7D,OAAO2D,QACzCG,YAAahF,EAASiF,OAAS,SAC/BlF,QAAS,CACLmF,KAAMnF,EAAQiE,UACdmB,MAAOpF,EAAQkE,YAEnBmB,WAAY,CAAE,aAAc,YAG5BV,EAAYxC,OAAS,EACf,cAACF,EAAD,CAAkBC,QAASoD,EAAiBC,QAvBxC,SAAAC,GAClB,IAAMC,EAAqBd,EAAYe,cACvC,OAAsB,OAAnBF,EAAOtC,QAAyBsC,EAAOtC,QAAQwC,cAAcC,SAASF,GAClED,EAAOhE,MAAMkE,cAAcC,SAASF,QAqB7B,gCC5DtB,IAAMpG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4F,KAAM,CACFS,SAAU,GAEdC,KAAM,CACFC,YAAavG,EAAMO,QAAQ,IAE/B0B,MAAM,aACFoE,SAAU,EACV9D,QAAS,QACRvC,EAAMgF,YAAYC,GAAG,MAAQ,CAC1B1C,QAAS,UAGjBoD,OAAO,aACHxD,SAAU,WACVqE,aAAcxG,EAAMyG,MAAMD,aAC1BtG,gBAAiBwG,YAAK1G,EAAMG,QAAQwG,OAAOC,MAAO,KAClD,UAAW,CACP1G,gBAAiBwG,YAAK1G,EAAMG,QAAQwG,OAAOC,MAAO,MAEtDC,WAAY,EACZC,SAAU,SACT9G,EAAMgF,YAAYC,GAAG,MAAQ,CAC1B4B,WAAY7G,EAAMO,QAAQ,GAC1B6B,MAAO,aAKJ,SAAS8C,IACpB,IAAMzE,EAAUX,IACRY,EAAaC,qBAAWjB,GAAxBgB,SAER,OACI,cAACqG,EAAA,EAAD,CAAQ5E,SAAS,WAAjB,SACI,eAAC6E,EAAA,EAAD,WACI,cAAC,IAAD,CAAOpG,UAAWH,EAAQ6F,OAC1B,cAACpF,EAAA,EAAD,CAAYN,UAAWH,EAAQwB,MAAOd,QAAQ,KAAK8F,QAAM,EAAzD,SACKvG,EAASY,WAEd,qBAAKV,UAAWH,EAAQkF,OAAxB,SACI,cAAC,EAAD,WCzCL,SAASuB,EAAT,GAAiC,IAAZC,EAAW,EAAXA,SAGlC,OACE,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,IACA,+BACGF,IAEH,cAAC3G,EAAD,O,qECJAV,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsH,SAAU,CACRC,WAAYvH,EAAMO,QAAQ,GAC1BiH,cAAexH,EAAMO,QAAQ,IAE/BkH,KAAM,CACJlD,OAAQ,OACRhC,QAAS,OACTmF,cAAe,UAEjBC,UAAW,CACTJ,WAAY,UAEdK,YAAa,CACXvB,SAAU,GAEZ7D,KAAM,CACJC,eAAgB,YAIpB,SAASoF,GAAT,GAAuC,IAAtB1D,EAAqB,EAArBA,QAAS2D,EAAY,EAAZA,SAClBrH,EAAUX,KADoB,EAENqF,oBAAS,GAFH,mBAE7B4C,EAF6B,KAEpBC,EAFoB,KAG5BtH,EAAaC,qBAAWjB,GAAxBgB,SAMR,OAJAuH,qBAAU,WACRD,GAAW,KACV,CAACA,IAEmB,IAAnB7D,EAAQvB,OACH,6BAIP,cAACsF,EAAA,EAAD,CAEEtH,UAAWH,EAAQ6G,SACnBjF,SAAS,KAHX,SAKE,cAACxB,EAAA,EAAD,CAAMC,WAAS,EAACP,QAAS,EAAzB,SACG4H,OAAOC,QAAQjE,GAASrB,KAAI,WAAgBuF,GAAhB,uBAAEjE,EAAF,KAAO6B,EAAP,YAC3B,cAACpF,EAAA,EAAD,CAAME,MAAI,EAAaC,GAAI,GAAIsH,GAAI,EAAGrH,GAAI,EAA1C,SACE,cAACsH,EAAA,EAAD,CAAMC,GAAIT,EAASU,QAAS,IAA5B,SACE,8BACA,cAAC,IAAD,CAAM7H,UAAWH,EAAQ+B,KAAMQ,GAAI8E,EAASY,SAAW,IAAMtE,EAA7D,SACE,cAACuE,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMhI,UAAWH,EAAQgH,KAAzB,UACE,cAACoB,GAAA,EAAD,CACEjI,UAAWH,EAAQkH,UACnBmB,MAAM,2CACN7G,MAAM,gBAER,cAAC8G,GAAA,EAAD,CAAanI,UAAWH,EAAQmH,YAAhC,SACE,cAAC1G,EAAA,EAAD,CAAYG,cAAY,EAACF,QAAQ,KAAKK,UAAU,KAAhD,SACGyE,EAAOhE,UAOZ,cAAC+G,EAAA,EAAD,UACE,cAAC9H,EAAA,EAAD,CAAYK,MAAM,UAAUX,UAAWH,EAAQwI,OAAQzH,UAAU,IAAjE,SACGd,EAASuI,uBAtBRZ,SANfP,EAASY,UA2CpBb,GAAM/D,aAAe,CACnBK,QAAS,IAGI+E,mBAAWrB,I,6BCrFpB/H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCwC,KAAM,CACFjB,MAAOvB,EAAMG,QAAQsD,QAAQ0F,KAC7B1G,eAAgB,YAmCT2G,OA/Bf,YAAkC,IAAVC,EAAS,EAATA,MACd5I,EAAUX,KADa,EAECqF,oBAAS,GAFV,mBAEtB4C,EAFsB,KAEbC,EAFa,KAO7B,OAHAC,qBAAU,WACND,GAAW,KACV,CAACA,IAEF,cAACO,EAAA,EAAD,CAAMC,GAAIT,EAASU,QAAS,IAA5B,SACA,cAACa,GAAA,EAAD,CAAOC,UAAW,EAAlB,SACI,cAAC1G,EAAA,EAAD,UACKwG,EAAMvG,KAAI,SAAA/B,GAAI,OACX,cAAC,IAAD,CAAMH,UAAWH,EAAQ+B,KAAMQ,GAAIjC,EAAKkC,KAAxC,SACI,eAACC,EAAA,EAAD,CAAUsG,QAAM,EAAhB,UACI,cAACpG,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAAC,KAAD,QAGR,cAACG,EAAA,EAAD,CACIC,QAAS1C,EAAKkB,YARyBlB,EAAKkC,gBCzBtEnD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsH,SAAU,CACNC,WAAYvH,EAAMO,QAAQ,GAC1BiH,cAAexH,EAAMO,QAAQ,IAEjCF,MAAO,CACHC,QAASN,EAAMO,QAAQ,GACvBgC,QAAS,OACTmF,cAAe,UAEnBC,UAAW,CACPJ,WAAY,UAEhBK,YAAa,CACTvB,SAAU,OAIH,SAASoD,GAAT,GAAmC,IAAZ9F,EAAW,EAAXA,QAC5BlD,EAAUX,KAD6B,EAEfqF,oBAAS,GAFM,mBAEtC4C,EAFsC,KAE7BC,EAF6B,KAQ7C,OAJAC,qBAAU,WACND,GAAW,KACZ,CAACA,IAGA,cAACO,EAAA,EAAD,CAAMC,GAAIT,EAASU,QAAS,IAA5B,SACI,cAACa,GAAA,EAAD,CAAOC,UAAW,EAAG3I,UAAWH,EAAQJ,MAAxC,SACI,cAACa,EAAA,EAAD,CACIC,QAAQ,KACRI,MAAM,gBAFV,SAII,cAAC,IAAD,UAAgBoC,UCjCpC,IAAM7D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsH,SAAU,CACNC,WAAYvH,EAAMO,QAAQ,GAC1BiH,cAAexH,EAAMO,QAAQ,IAEjCiC,KAAM,CACFjB,MAAOvB,EAAMG,QAAQsD,QAAQ0F,KAC7B1G,eAAgB,YAyBTiH,OArBf,YAAgD,IAAtBC,EAAqB,EAArBA,YAAaR,EAAQ,EAARA,KAC7B1I,EAAUX,KAEhB,OAAKqJ,EAKD,cAACjB,EAAA,EAAD,CAAWtH,UAAWH,EAAQ6G,SAAUjF,SAAS,KAAjD,SACI,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACF,UAAWH,EAAQ6G,SAAU/G,QAAS,EAAtD,UACI,cAACM,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,EAAf,SACI,cAACwI,GAAD,CAAa7I,UAAWH,EAAQmJ,OAAQjG,QAASwF,MAErD,cAACtI,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,EAAf,SACI,cAAC,GAAD,CAAcoI,MAAOM,WAVzB,8B,8BCbV7J,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4F,KAAM,CACJ,YAAa,CACXiE,UAAW7J,EAAMO,QAAQ,KAG7BiC,KAAM,CACJC,eAAgB,OAChBlB,MAAOvB,EAAMG,QAAQsD,QAAQ0F,UAKlB,SAASW,GAAT,GAA8B,IAAR7G,EAAO,EAAPA,KAC7BxC,EAAUX,KACRY,EAAaC,qBAAWjB,GAAxBgB,SACFqJ,EAAe9G,EAAKA,EAAKL,OAAS,GAAKK,EAAKA,EAAKL,OAAS,GAAnB,MAAiC,KAE9E,OACE,qBAAKhC,UAAWH,EAAQmF,KAAxB,SACE,eAACoE,GAAA,EAAD,CAAaC,SAAU,EAAGC,UAAW,cAAC,KAAD,CAAkBC,SAAS,UAAYC,aAAW,aAAvF,UACE,cAAC,IAAD,CAAMxJ,UAAWH,EAAQ+B,KAAMjB,MAAM,UAAUyB,GAAG,IAAlD,SACGtC,EAAS2J,OAGVN,GAAgB9G,EAAKW,MAAM,EAAGX,EAAKL,OAAQ,GAAGE,KAAI,SAAAN,GAAI,OACpD,cAAC,IAAD,CAAM5B,UAAWH,EAAQ+B,KAAsBQ,GAAIR,EAAKS,KAAxD,SACGT,EAAKP,OAD4BO,EAAKS,SAM3C8G,GAAgB,cAAC7I,EAAA,EAAD,CAAYK,MAAM,cAAlB,SAAiCwI,SAO3DD,GAAYhG,aAAe,CACzBb,KAAM,CAAC,KCxCT,IAAMnD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsK,YAAa,CACXpK,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,QAASN,EAAMO,QAAQ,EAAG,EAAG,IAE/BgK,YAAa,CACXV,UAAW7J,EAAMO,QAAQ,QAId,SAASiK,GAAT,GAA2C,IAAvBvI,EAAsB,EAAtBA,MAAOwI,EAAe,EAAfA,YAClChK,EAAUX,KADuC,EAEzBqF,oBAAS,GAFgB,mBAEhD4C,EAFgD,KAEvCC,EAFuC,KAQvD,OAJAC,qBAAU,WACRD,GAAW,KACV,CAACA,IAGF,cAACO,EAAA,EAAD,CAAMC,GAAIT,EAASU,QAAS,IAA5B,SAEE,qBAAK7H,UAAWH,EAAQ6J,YAAxB,SACE,eAACpC,EAAA,EAAD,CAAW7F,SAAS,KAApB,UACE,cAACnB,EAAA,EAAD,CACEM,UAAU,KACVL,QAAQ,KACRC,MAAM,SACNG,MAAM,cACNF,cAAY,EALd,SAOGY,IAKH,qBAAKrB,UAAWH,EAAQ8J,YAAxB,SACE,cAAC1J,EAAA,EAAD,CAAMC,WAAS,EAACP,QAAS,EAAGmK,QAAQ,SAApC,SACE,cAACZ,GAAD,CAAa7G,KAAMwH,eCsClBvB,oBA1Ef,YAAyC,IAApBpB,EAAmB,EAAnBA,SAAU6C,EAAS,EAATA,MAAS,EACRxF,mBAAS,IADD,mBAC7ByF,EAD6B,KACrBC,EADqB,OAEE1F,mBAAS,IAFX,mBAE7BsF,EAF6B,KAEhBK,EAFgB,OAGJ3F,oBAAS,GAHL,mBAG7B4F,EAH6B,KAGnBC,EAHmB,OAII7F,mBAASnB,EAAmBnE,IAJhC,mBAI7BoL,EAJ6B,KAIfC,EAJe,OAKY/F,mBAAS,IALrB,mBAK7BgG,EAL6B,KAKXC,EALW,OAMbT,EAAMU,OAArBpI,EAN4B,EAM5BA,KAAMqI,EANsB,EAMtBA,KAERC,EAAYC,uBACd,WACI,IADE,EACIC,EAAWxI,EAAOA,EAAKyI,MAAM,KAAO,GACpCjB,EAAc,GAChBkB,EAAgBV,EAChBW,EAAiB,IAAMN,EACrBO,EAAcJ,EAASA,EAAS7I,OAAS,GAL7C,cAMe6I,GANf,IAMF,2BAA2B,CAAC,IAAnBK,EAAkB,QACvB,GAAID,IAAgBC,EAAM,CACtB,IAAInC,EAAc,GAClB,IAAK,IAAIvF,KAAOuH,EAAcxH,QACvB0H,IAAgBzH,GACfuF,EAAYtF,KAAK,CACbpC,MAAO0J,EAAcxH,QAAQC,GAAKnC,MAClCgB,KAAMmB,IAIlBgH,EAAoBzB,GAExB,IAAKgC,EAAcxH,QACf,MAEAwH,EAAcxH,QAAQ2H,IACtBF,GAAkB,IAAME,EACxBrB,EAAYpG,KAAK,CAACpC,MAAO0J,EAAcxH,QAAQ2H,GAAM7J,MAAOgB,KAAM2I,IAClED,EAAgBA,EAAcxH,QAAQ2H,IAEtCd,GAAY,IA3BlB,8BA8BFF,EAAeL,GACfI,EAAUc,KAEd,CAAC1I,EAAMqI,EAAML,IAGXc,EAAaP,uBACf,WACOxH,EAAmBsH,IAClBJ,EAAgBlH,EAAmBsH,IACnCR,EAAe,CAAC,CAAC7I,MAAOqJ,EAAKrJ,MAAOgB,KAAM,IAAMqI,MAEhDN,GAAY,KAGpB,CAACM,IAQL,OALArD,qBAAU,WACN8D,IACAR,MACD,CAACzD,EAASY,SAAU6C,EAAWQ,IAG9B,cAAC,EAAYC,SAAb,CAAsBzG,MAAO0F,EAA7B,SACI,eAAC/D,EAAD,WACI,cAACsD,GAAD,CAAUvI,MAAO2I,EAAO3I,MAAOwI,YAAaA,IAC5C,cAAC,GAAD,CAAgBd,YAAawB,EAAkBhC,KAAMyB,EAAOjH,UAC5D,cAAC,GAAD,CAAOQ,QAASyG,EAAOzG,UACtB4G,EAAW,cAAC,IAAD,CAAU/H,GAAG,SAAY,OAJxB8E,EAASY,eClEhC5I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsK,YAAa,CACXpK,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,QAASN,EAAMO,QAAQ,EAAG,EAAG,IAE/B0L,QAAS,CACPC,aAAc,WAIH,SAASC,GAAT,GAAiD,EAAtBlK,MAAsB,EAAfwI,YAAgB,IACzDhK,EAAUX,KAD8C,EAEhCqF,oBAAS,GAFuB,mBAEvD4C,EAFuD,KAE9CC,EAF8C,KAGtDtH,EAAaC,qBAAWjB,GAAxBgB,SAMR,OAJAuH,qBAAU,WACRD,GAAW,KACV,CAACA,IAGF,cAACO,EAAA,EAAD,CAAMC,GAAIT,EAASU,QAAS,IAA5B,SACE,qBAAK7H,UAAWH,EAAQ6J,YAAxB,SACE,eAACpC,EAAA,EAAD,CAAW7F,SAAS,KAApB,UACE,cAACnB,EAAA,EAAD,CACEN,UAAWH,EAAQwL,QACnBzK,UAAU,KACVL,QAAQ,KACRC,MAAM,SACNG,MAAM,cACNF,cAAY,EANd,SAQGX,EAASuL,UAEZ,cAAC/K,EAAA,EAAD,CACEN,UAAWH,EAAQ2L,WACnB5K,UAAU,KACVL,QAAQ,KACRC,MAAM,SACNG,MAAM,gBACNF,cAAY,EANd,SAQGX,EAAS2L,qBCjCtB,IAAMC,GAAiB,CAACzM,GAElBC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsH,SAAU,CACRC,WAAYvH,EAAMO,QAAQ,GAC1BiH,cAAexH,EAAMO,QAAQ,IAE/BkH,KAAM,CACJlD,OAAQ,OACRhC,QAAS,OACTmF,cAAe,UAEjBC,UAAW,CACTJ,WAAY,UAEdK,YAAa,CACXvB,SAAU,GAEZ7D,KAAM,CACJC,eAAgB,YAIL,SAAS8J,KACtB,IAAM9L,EAAUX,KADkB,EAEJqF,oBAAS,GAFL,mBAE3B4C,EAF2B,KAElBC,EAFkB,KAQlC,OAJAC,qBAAU,WACRD,GAAW,KACV,CAACA,IAGF,cAAC,EAAYgE,SAAb,CAAsBzG,MAAO1F,EAA7B,SACE,cAACqI,EAAA,EAAD,CAAWtH,UAAWH,EAAQ6G,SAAUjF,SAAS,KAAjD,SACE,cAACxB,EAAA,EAAD,CAAMC,WAAS,EAACP,QAAS,EAAzB,SACG+L,GAAexJ,KAAI,SAACwI,EAAMjD,GAAP,OAClB,cAACxH,EAAA,EAAD,CAAME,MAAI,EAAaC,GAAI,GAAIsH,GAAI,EAAGrH,GAAI,EAA1C,SACE,cAACsH,EAAA,EAAD,CAAMC,GAAIT,EAASU,QAAS,IAA5B,SACE,cAACE,EAAA,EAAD,UACE,cAAC,IAAD,CAAM/H,UAAWH,EAAQ+B,KAAMQ,GAAI,IAAMsI,EAAKQ,KAA9C,SACE,eAAClD,EAAA,EAAD,CAAMhI,UAAWH,EAAQgH,KAAzB,UACE,cAACoB,GAAA,EAAD,CACEjI,UAAWH,EAAQkH,UACnBmB,MAAM,2CACN7G,MAAM,gBAER,cAAC8G,GAAA,EAAD,CAAanI,UAAWH,EAAQmH,YAAhC,SACE,cAAC1G,EAAA,EAAD,CAAYG,cAAY,EAACF,QAAQ,KAAKK,UAAU,KAAhD,SACG8J,EAAKrJ,UAMV,cAAC+G,EAAA,EAAD,UACE,cAAC9H,EAAA,EAAD,CAAYK,MAAM,UAAUC,UAAU,IAAtC,SACG8J,EAAK5K,SAASuI,qBApBbZ,YC5C5B,IAAMvI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsK,YAAa,CACXpK,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,QAASN,EAAMO,QAAQ,EAAG,EAAG,IAE/BgK,YAAa,CACXV,UAAW7J,EAAMO,QAAQ,IAE3B+G,SAAU,CACRC,WAAYvH,EAAMO,QAAQ,GAC1BiH,cAAexH,EAAMO,QAAQ,IAE/BkH,KAAM,CACJlD,OAAQ,OACRhC,QAAS,OACTmF,cAAe,UAEjBC,UAAW,CACTJ,WAAY,UAEdK,YAAa,CACXvB,SAAU,OAKC,SAASmG,KACtB,IAAM/L,EAAUX,KAEhB,OACE,eAACoH,EAAD,WACE,cAACiF,GAAD,IACA,cAACjE,EAAA,EAAD,CAAWtH,UAAWH,EAAQ6G,SAAUjF,SAAS,KAAjD,SAEE,cAACxB,EAAA,EAAD,CAAMC,WAAS,EAACP,QAAS,EAAzB,SACI,cAACgM,GAAD,WCpCZ,IAAMzM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsK,YAAa,CACXpK,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,QAASN,EAAMO,QAAQ,EAAG,EAAG,IAE/BgK,YAAa,CACXV,UAAW7J,EAAMO,QAAQ,IAE3B+G,SAAU,CACRC,WAAYvH,EAAMO,QAAQ,GAC1BiH,cAAexH,EAAMO,QAAQ,IAE/BkH,KAAM,CACJlD,OAAQ,OACRhC,QAAS,OACTmF,cAAe,UAEjBC,UAAW,CACTJ,WAAY,UAEdK,YAAa,CACXvB,SAAU,OAKC,SAASoG,GAASC,GAC/B,IAAMjM,EAAUX,KAEhB,OACE,eAACoH,EAAD,WACE,cAACsD,GAAD,CAAUvI,MAAM,iBAAiBwI,YAAa,CAAC,CAACxI,MAAO,MAAOgB,KAAM,WACpE,cAACiF,EAAA,EAAD,CAAWtH,UAAWH,EAAQ6G,SAAUjF,SAAS,KAAjD,SACE,cAACxB,EAAA,EAAD,CAAMC,WAAS,EAACP,QAAS,EAAzB,iCC9BO,SAASoM,KACpB,OACI,cAAC,IAAD,UAGI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAAC3J,KAAK,IAAIzB,UAAWgL,KACjC,cAAC,IAAD,CAAOI,OAAK,EAAC3J,KAAK,OAAOzB,UAAWiL,KACpC,cAAC,IAAD,CAAOxJ,KAAK,gBAAgBzB,UAAWqL,UCnBvD,IAYeC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mBCDR/M,GAAQuN,aAAe,CAC3BpN,QAAS,CACPsD,QAAS,CACP0F,KAAM,cAKZqE,IAASC,OACP,cAACC,GAAA,EAAD,CAAe1N,MAAOA,GAAtB,SACE,cAAC2M,GAAD,MAEFgB,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.1f8177f2.chunk.js","sourcesContent":["import React from \"react\";\nimport en from \"../lang/en.json\"\n\nconst LangContext = React.createContext(en);\n\nexport default LangContext;\n","import React, { useContext } from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\n\nimport LangContext from \"../../utils/LangContext\"\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6)\n    }\n}));\n\nexport default function Footer() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <footer className={classes.footer}>\n            <Grid container>\n                <Grid item xs={12} md={4}></Grid>\n                <Grid item xs={12} md={4}>\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        {literals.app_name}\n                    </Typography>\n                    <Typography spacing=\"10\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                        {literals.disclaimer}\n                    </Typography>\n                    <br />\n                    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                        {literals.copyright} ©\n                        <Link color=\"inherit\" target=\"_BLANK\" href=\"https://mfso.ca\">\n                            {' '}{literals.mfso}\n                        </Link>{' '}\n                        {new Date().getFullYear()}\n                        {'.'}\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={4}></Grid>\n            </Grid>\n        </footer>\n    )\n}","\n\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: \"black\"\n    },\n    listRoot: {\n        position: 'absolute',\n        width: '100%',\n        maxWidth: '70ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n    link: {\n        textDecoration: \"none\"\n    }\n}));\n\nexport default function SearchResultList({ results }) {\n    const classes = useStyles();\n\n    if (results.length === 0) {\n        return (<></>)\n    }\n\n    return (\n        <List className={classes.listRoot}>\n            {results.map((result) => (\n                <Link className={classes.link} key={result.path} to={result.path}>\n                    <ListItem alignItems=\"flex-start\">\n\n                        <ListItemAvatar>\n                            <Avatar alt={result.title} src=\"https://via.placeholder.com/265x150.webp\" />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.title}\n                            primary={result.title}\n                            secondary={\n                                <ReactMarkdown>\n                                   {result.content !== null ? result.content.slice(0, 100)+ \"...\" : \"\"}\n                                </ReactMarkdown>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </Link>\n\n            ))}\n        </List>\n    )\n}\n\nSearchResultList.defaultProps = {\n    results: []\n};","import en from \"../lang/en.json\";\n\nconst SupportedLanguages = {\n    en: en\n};\n\nexport default SupportedLanguages;\n","import SupportedLanguages from './SupportedLanguages';\n\nlet url\nconst optionList = []\nconst mapOptions = (options, path = \"/\") => {\n    for (let key in options) {\n        url = (path !== \"/\" ? path : \"\") + \"/\" + key\n        optionList.push({\n            title: options[key].title,\n            path: url,\n            content: options[key].content ? options[key].content : null\n        })\n        if (options[key].options) {\n            mapOptions(options[key].options, url)\n        }\n    }\n    url = \"\"\n}\nmapOptions(SupportedLanguages)\n\nexport default optionList;","\n\nimport React, { useContext, useState } from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LangContext from \"../../utils/LangContext\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport SearchResultList from './SearchResultList';\n\nimport NavigatorOptions from '../../utils/NavigatorOptions';\n\nconst useStyles = makeStyles((theme) => ({\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '50ch',\n            },\n        },\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const [searchValue, setSearchValue] = useState(\"\")\n    const { literals } = useContext(LangContext);\n\n    const optionsFilter = option => {\n        const searchValLowerCase = searchValue.toLowerCase()\n        if(option.content !== null) return option.content.toLowerCase().includes(searchValLowerCase)\n        return option.title.toLowerCase().includes(searchValLowerCase)\n    }\n\n    return (\n        <div>\n            <div className={classes.searchIcon}>\n                <SearchIcon />\n            </div>\n            <InputBase\n                value={searchValue}\n                onChange={(e) => setSearchValue(e.target.value)}\n                placeholder={literals.search + \"…\"}\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n            />\n            {\n                searchValue.length > 0\n                    ? <SearchResultList results={NavigatorOptions.filter(optionsFilter)} />\n                    : <></>\n            }\n        </div>\n    )\n}\n\n\n","import React, { useContext } from 'react'\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport LangContext from \"../../utils/LangContext\";\nimport SearchBar from './SearchBar';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        minWidth: '200px',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    }\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <AppBar position=\"relative\">\n            <Toolbar>\n                <Gavel className={classes.icon} />\n                <Typography className={classes.title} variant=\"h6\" noWrap>\n                    {literals.app_name}\n                </Typography>\n                <div className={classes.search}>\n                    <SearchBar />\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\n\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\nimport Footer from \"../components/Footer\"\nimport Header from \"../components/Header\"\n\n// const useStyles = makeStyles((theme) => ({\n// }));\n\nexport default function MainLayout({children}) {\n  // const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Header />\n      <main>\n        {children}\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport Grow from '@material-ui/core/Grow';\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  link: {\n    textDecoration: \"none\",\n  }\n}));\n\nfunction Cards({ options, location }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n  const { literals } = useContext(LangContext);\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  if (options.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <Container\n      key={location.pathname}\n      className={classes.cardGrid}\n      maxWidth=\"md\"\n    >\n      <Grid container spacing={4}>\n        {Object.entries(options).map(([key, option], index) => (\n          <Grid item key={index} xs={12} sm={6} md={4}>\n            <Grow in={checked} timeout={1000}>\n              <div>\n              <Link className={classes.link} to={location.pathname + \"/\" + key}>\n                <CardActionArea>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image=\"https://via.placeholder.com/265x150.webp\"\n                      title=\"Image title\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {option.title}\n                      </Typography>\n                      {/* <Typography>\n                  This is a media card. You can use this section to describe the\n                  content.\n                </Typography> */}\n                    </CardContent>\n                    <CardActions>\n                      <Typography color=\"primary\" className={classes.choose} component=\"p\">\n                        {literals.choose}\n                      </Typography>\n                    </CardActions>\n                  </Card>\n                </CardActionArea>\n              </Link>\n              </div>\n            </Grow>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n\nCards.defaultProps = {\n  options: [],\n};\n\nexport default withRouter(Cards);\n","\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Grow from '@material-ui/core/Grow';\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\"\n    }\n}));\n\nfunction SideBarLinks({ links }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n    \n    useEffect(() => {\n        setChecked(true)\n      }, [setChecked])\n    return (\n        <Grow in={checked} timeout={1000}>\n        <Paper elevation={1}>\n            <List>\n                {links.map(item => (\n                    <Link className={classes.link} to={item.path} key={item.path}>\n                        <ListItem button>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <LinkIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={item.title}\n                            />\n                        </ListItem>\n                    </Link>\n                ))}\n            </List>\n        </Paper>\n        </Grow>\n    )\n}\n\nexport default SideBarLinks","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from 'react-markdown';\n\nimport Grow from '@material-ui/core/Grow';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    paper: {\n        padding: theme.spacing(5),\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function ContentCard({ content }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1} className={classes.paper}>\n                <Typography\n                    variant=\"h5\"\n                    color=\"textSecondary\"\n                >\n                    <ReactMarkdown>{content}</ReactMarkdown>\n                </Typography>\n            </Paper>\n        </Grow>\n    )\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport SideBarLinks from \"./SideBarLinks\"\nimport ContentCard from \"./ContentCard\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(6)\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: \"none\"\n    }\n}));\n\nfunction ContentWrapper({ sideBarList, main }) {\n    const classes = useStyles();\n\n    if (!main) {\n        return (<></>)\n    }\n\n    return (\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\n            <Grid container className={classes.cardGrid} spacing={5}>\n                <Grid item md={9}>\n                    <ContentCard className={classes.column} content={main} />\n                </Grid>\n                <Grid item md={3}>\n                    <SideBarLinks links={sideBarList} /> \n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default ContentWrapper","import React, { useContext} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport LangContext from '../../utils/LangContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main\n  }\n}));\n\n\nexport default function BreadCrumbs({path}) {\n  const classes = useStyles();\n  const { literals } = useContext(LangContext)\n  const currentTitle = path[path.length - 1] ? path[path.length - 1]['title'] : null\n\n  return (\n    <div className={classes.root}>\n      <Breadcrumbs maxItems={4} separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        <Link className={classes.link} color=\"inherit\" to=\"/\">\n          {literals.home}\n        </Link>\n        {\n          currentTitle && path.slice(0, path.length -1).map(link => (\n            <Link className={classes.link} key={link.path} to={link.path}>\n              {link.title}\n            </Link>)\n          )\n        }\n        {\n          currentTitle && <Typography color=\"textPrimary\">{currentTitle}</Typography>\n        }\n      </Breadcrumbs>\n    </div>\n  );\n}\n\nBreadCrumbs.defaultProps = {\n  path: [{}]\n};","import React, { useEffect, useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from '@material-ui/core/Grow';\n\nimport BreadCrumbs from \"./BreadCrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 9),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default function HeroUnit({ title, breadCrumbs }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <Grow in={checked} timeout={1000}>\n\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"md\">\n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            {title}\n          </Typography>\n          {/* <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          DESC. PLACEHOLDER\n        </Typography> */}\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <BreadCrumbs path={breadCrumbs} />\n            </Grid>\n          </div>\n        </Container>\n      </div>\n    </Grow>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport LangContext from \"../../utils/LangContext\";\nimport MainLayout from '../layouts/MainLayout';\nimport Cards from \"../components/Cards\"\nimport ContentWrapper from \"../components/ContentWrapper\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nimport SupportedLanguages from '../../utils/SupportedLanguages';\n\nfunction Navigator({ location, match }) {\n    const [module, setModule] = useState({})\n    const [breadCrumbs, setBreadCrumbs] = useState([])\n    const [notFound, setNotFound] = useState(false)\n    const [selectedLang, setSelectedLang] = useState(SupportedLanguages.en)\n    const [sideBarListState, setSideBarListState] = useState([])\n    const { path, lang } = match.params\n\n    const parsePath = useCallback(\n        () => {\n            const pathlist = path ? path.split(\"/\") : []\n            const breadCrumbs = []\n            let currentModule = selectedLang\n            let breadcrumbpath = \"/\" + lang\n            const finalParent = pathlist[pathlist.length - 1]\n            for (let slug of pathlist) {\n                if (finalParent === slug) {\n                    let sideBarList = []\n                    for (let key in currentModule.options){\n                        if(finalParent !== key){\n                            sideBarList.push({\n                                title: currentModule.options[key].title,\n                                path: key\n                            })\n                        }\n                    }\n                    setSideBarListState(sideBarList)\n                }\n                if (!currentModule.options) {\n                    break\n                }\n                if (currentModule.options[slug]) {\n                    breadcrumbpath += \"/\" + slug\n                    breadCrumbs.push({title: currentModule.options[slug].title, path: breadcrumbpath})\n                    currentModule = currentModule.options[slug]\n                } else {\n                    setNotFound(true)\n                }\n            }\n            setBreadCrumbs(breadCrumbs)\n            setModule(currentModule)\n        },\n        [path, lang, selectedLang],\n    );\n\n    const selectLang = useCallback(\n        () => {\n            if(SupportedLanguages[lang]){\n                setSelectedLang(SupportedLanguages[lang])\n                setBreadCrumbs([{title: lang.title, path: \"/\" + lang}])\n            } else {\n                setNotFound(true)\n            }\n        },\n        [lang],\n    );\n\n    useEffect(() => {\n        selectLang();\n        parsePath();\n    }, [location.pathname, parsePath, selectLang]);\n\n    return (\n        <LangContext.Provider value={selectedLang}>\n            <MainLayout key={location.pathname}>\n                <HeroUnit title={module.title} breadCrumbs={breadCrumbs} />\n                <ContentWrapper sideBarList={sideBarListState} main={module.content} />\n                <Cards options={module.options} />\n                {notFound ? <Redirect to=\"/404\" /> : null}\n            </MainLayout>\n        </LangContext.Provider>\n    )\n}\n\nexport default withRouter(Navigator)","import React, { useEffect, useState, useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from '@material-ui/core/Grow';\n\nimport LangContext from \"../../utils/LangContext\"\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 9),\n  },\n  welcome: {\n    marginBottom: \"0px\",\n  }\n}));\n\nexport default function LandingHeroUnit({ title, breadCrumbs }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n  const { literals } = useContext(LangContext)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <Grow in={checked} timeout={1000}>\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography\n            className={classes.welcome}\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            {literals.welcome}\n          </Typography>\n          <Typography\n            className={classes.chooseLang}\n            component=\"h2\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {literals.choose_lang}\n          </Typography>\n        </Container>\n      </div>\n    </Grow>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport en from \"../../lang/en.json\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst supportedLangs = [en]\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  link: {\n    textDecoration: \"none\"\n  }\n}));\n\nexport default function LangCards() {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <LangContext.Provider value={en}>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n          {supportedLangs.map((lang, index) => (\n            <Grid item key={index} xs={12} sm={6} md={4}>\n              <Grow in={checked} timeout={1000}>\n                <CardActionArea>\n                  <Link className={classes.link} to={\"/\" + lang.slug}>\n                    <Card className={classes.card}>\n                      <CardMedia\n                        className={classes.cardMedia}\n                        image=\"https://via.placeholder.com/265x150.webp\"\n                        title=\"Image title\"\n                      />\n                      <CardContent className={classes.cardContent}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          {lang.title}\n                        </Typography>\n                        {/* <Typography>\n                          Description if there is one\n                        </Typography> */}\n                      </CardContent>\n                      <CardActions>\n                        <Typography color=\"primary\" component=\"p\">\n                          {lang.literals.choose}\n                        </Typography>\n                      </CardActions>\n                    </Card>\n                  </Link>\n\n                </CardActionArea>\n              </Grow>\n\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </LangContext.Provider>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport LandingHeroUnit from \"../components/LandingHeroUnit\";\nimport LangCards from \"../components/LangCards\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <MainLayout>\n      <LandingHeroUnit />\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n            <LangCards />\n        </Grid>\n      </Container>\n    </MainLayout>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function NotFound(props) {\n  const classes = useStyles();\n\n  return (\n    <MainLayout>\n      <HeroUnit title=\"Page Not Found\" breadCrumbs={[{title: \"404\", path: \"/404\"}]} />\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n            Page Not Found\n        </Grid>\n      </Container>\n    </MainLayout>\n  );\n}\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport Navigator from './views/pages/Navigator'\nimport Home from './views/pages/Home'\nimport NotFound from './views/pages/NotFound'\n\nexport default function App() {\n    return (\n        <Router>\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/404\" component={NotFound} />\n                <Route path=\"/:lang/:path*\" component={Navigator} />\n            </Switch>\n        </Router>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0c9d4a\",\n    }\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}