{"version":3,"sources":["utils/LangContext.js","views/components/Footer.jsx","views/components/SearchResultList.jsx","utils/SupportedLanguages.js","utils/NavigatorOptions.js","views/components/SearchBar.jsx","views/components/Header.jsx","views/layouts/MainLayout.jsx","views/components/Cards.jsx","views/components/ContentCard.jsx","views/components/ContentWrapper.jsx","views/components/BreadCrumbs.jsx","views/components/HeroUnit.jsx","views/pages/Navigator.jsx","views/components/LandingHeroUnit.jsx","views/components/LangCards.jsx","views/pages/Home.jsx","views/pages/NotFound.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LangContext","React","createContext","en","useStyles","makeStyles","theme","footer","backgroundColor","palette","background","paper","padding","spacing","Footer","classes","literals","useContext","className","Grid","container","item","xs","md","Typography","variant","align","gutterBottom","app_name","color","component","disclaimer","copyright","Link","target","href","mfso","Date","getFullYear","title","listRoot","position","width","maxWidth","inline","display","link","textDecoration","SearchResultList","results","length","List","map","result","to","path","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Fragment","content","slice","Divider","defaultProps","url","SupportedLanguages","optionList","mapOptions","options","optionkeys","Object","keys","key","push","searchIcon","height","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","breakpoints","up","Header","useState","searchValue","setSearchValue","InputBase","value","onChange","e","placeholder","search","root","input","inputProps","NavigatorOptions","filter","option","toLowerCase","includes","flexGrow","icon","marginRight","borderRadius","shape","fade","common","white","marginLeft","minWidth","AppBar","Toolbar","noWrap","MainLayout","children","CssBaseline","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","Cards","location","checked","setChecked","useEffect","Container","entries","index","sm","Grow","in","timeout","pathname","CardActionArea","Card","CardMedia","image","CardContent","CardActions","choose","withRouter","ContentCard","Paper","elevation","ContentWrapper","sidebar","main","column","marginTop","BreadCrumbs","currentTitle","Breadcrumbs","maxItems","separator","fontSize","aria-label","home","heroContent","heroButtons","HeroUnit","breadCrumbs","justify","match","module","setModule","setBreadCrumbs","notFound","setNotFound","selectedLang","setSelectedLang","params","lang","parsePath","useCallback","pathlist","split","currentModule","breadcrumbpath","slug","selectLang","Provider","welcome","marginBottom","LandingHeroUnit","chooseLang","choose_lang","supportedLangs","LangCards","Home","NotFound","props","App","exact","Navigator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.95acc2ed.chunk.js","sourcesContent":["import React from \"react\";\nimport en from \"../lang/en.json\"\n\nconst LangContext = React.createContext(en);\n\nexport default LangContext;\n","import React, { useContext } from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\n\nimport LangContext from \"../../utils/LangContext\"\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6)\n    }\n}));\n\nexport default function Footer() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <footer className={classes.footer}>\n            <Grid container>\n                <Grid item xs={12} md={4}></Grid>\n                <Grid item xs={12} md={4}>\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        {literals.app_name}\n                    </Typography>\n                    <Typography spacing=\"10\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                        {literals.disclaimer}\n                    </Typography>\n                    <br />\n                    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                        {literals.copyright} ©\n                        <Link color=\"inherit\" target=\"_BLANK\" href=\"https://mfso.ca\">\n                            {' '}{literals.mfso}\n                        </Link>{' '}\n                        {new Date().getFullYear()}\n                        {'.'}\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={4}></Grid>\n            </Grid>\n        </footer>\n    )\n}","\n\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: \"black\"\n    },\n    listRoot: {\n        position: 'absolute',\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n    link: {\n        textDecoration: \"none\"\n    }\n}));\n\nexport default function SearchResultList({ results }) {\n    const classes = useStyles();\n\n    if (results.length === 0) {\n        return (<></>)\n    }\n\n    return (\n        <List className={classes.listRoot}>\n            {results.map((result) => (\n                <Link className={classes.link} key={result.path} to={result.path}>\n                    <ListItem alignItems=\"flex-start\">\n\n                        <ListItemAvatar>\n                            <Avatar alt={result.title} src=\"https://via.placeholder.com/265x150.webp\" />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.title}\n                            primary={result.title}\n                            secondary={\n                                <React.Fragment>\n                                   {result.content !== null ? result.content.slice(0, 100) + \"...\" : \"\"}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </Link>\n\n            ))}\n        </List>\n    )\n}\n\nSearchResultList.defaultProps = {\n    results: []\n};","import en from \"../lang/en.json\";\n\nconst SupportedLanguages = {\n    en: en\n};\n\nexport default SupportedLanguages;\n","import SupportedLanguages from './SupportedLanguages';\n\nlet url\nconst optionList = []\nconst mapOptions = (options, path = \"/\") => {\n    const optionkeys = Object.keys(options)\n    for (let key of optionkeys) {\n        url = (path !== \"/\" ? path : \"\") + \"/\" + key\n        optionList.push({\n            title: options[key].title,\n            path: url,\n            content: options[key].content ? options[key].content : null\n        })\n        if (options[key].options) {\n            mapOptions(options[key].options, url)\n        }\n    }\n    url = \"\"\n}\nmapOptions(SupportedLanguages)\n\nexport default optionList;","\n\nimport React, { useContext, useState } from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LangContext from \"../../utils/LangContext\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport SearchResultList from './SearchResultList';\n\nimport NavigatorOptions from '../../utils/NavigatorOptions';\n\nconst useStyles = makeStyles((theme) => ({\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const [searchValue, setSearchValue] = useState(\"\")\n    const { literals } = useContext(LangContext);\n\n    return (\n        <div>\n            <div className={classes.searchIcon}>\n                <SearchIcon />\n            </div>\n            <InputBase\n                value={searchValue}\n                onChange={(e) => setSearchValue(e.target.value)}\n                placeholder={literals.search + \"…\"}\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n            />\n            {\n                searchValue.length > 0\n                    ? <SearchResultList results={NavigatorOptions.filter(option => option.title.toLowerCase().includes(searchValue.toLowerCase()))} />\n                    : <></>\n            }\n        </div>\n    )\n}\n\n\n","import React, { useContext } from 'react'\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport LangContext from \"../../utils/LangContext\";\nimport SearchBar from './SearchBar';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        minWidth: '200px',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    }\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const { literals } = useContext(LangContext);\n\n    return (\n        <AppBar position=\"relative\">\n            <Toolbar>\n                <Gavel className={classes.icon} />\n                <Typography className={classes.title} variant=\"h6\" noWrap>\n                    {literals.app_name}\n                </Typography>\n                <div className={classes.search}>\n                    <SearchBar />\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\n\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\nimport Footer from \"../components/Footer\"\nimport Header from \"../components/Header\"\n\n// const useStyles = makeStyles((theme) => ({\n// }));\n\nexport default function MainLayout({children}) {\n  // const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Header />\n      <main>\n        {children}\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport Grow from '@material-ui/core/Grow';\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  link: {\n    textDecoration: \"none\",\n  }\n}));\n\nfunction Cards({ options, location }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n  const { literals } = useContext(LangContext);\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  if (options.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <Container\n      key={location.pathname}\n      className={classes.cardGrid}\n      maxWidth=\"md\"\n    >\n      <Grid container spacing={4}>\n        {Object.entries(options).map(([key, option], index) => (\n          <Grid item key={index} xs={12} sm={6} md={4}>\n            <Grow in={checked} timeout={1000}>\n              <div>\n              <Link className={classes.link} to={location.pathname + \"/\" + key}>\n                <CardActionArea>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image=\"https://via.placeholder.com/265x150.webp\"\n                      title=\"Image title\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {option.title}\n                      </Typography>\n                      {/* <Typography>\n                  This is a media card. You can use this section to describe the\n                  content.\n                </Typography> */}\n                    </CardContent>\n                    <CardActions>\n                      <Typography color=\"primary\" className={classes.choose} component=\"p\">\n                        {literals.choose}\n                      </Typography>\n                    </CardActions>\n                  </Card>\n                </CardActionArea>\n              </Link>\n              </div>\n            </Grow>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n\nCards.defaultProps = {\n  options: [],\n};\n\nexport default withRouter(Cards);\n","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from 'react-markdown';\n\nimport Grow from '@material-ui/core/Grow';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    paper: {\n        padding: theme.spacing(5),\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function ContentCard({ content }) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false)\n\n    useEffect(() => {\n        setChecked(true)\n    }, [setChecked])\n\n    return (\n        <Grow in={checked} timeout={1000}>\n            <Paper elevation={1} className={classes.paper}>\n                <Typography\n                    variant=\"h5\"\n                    color=\"textSecondary\"\n                >\n                    <ReactMarkdown>{content}</ReactMarkdown>\n                </Typography>\n            </Paper>\n        </Grow>\n    )\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ContentCard from \"../components/ContentCard\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(6)\n    },\n}));\n\nfunction ContentWrapper({ sidebar, main }) {\n    const classes = useStyles();\n\n    if(!main){\n        return (<></>)\n    }\n\n    return (\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\n            <Grid container className={classes.cardGrid} spacing={5}>\n                <Grid item md={3}>\n                    <ContentCard content={sidebar} />\n                </Grid>\n                <Grid item md={9}>\n                    <ContentCard className={classes.column}  content={main} />\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default ContentWrapper","import React, { useContext} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport LangContext from '../../utils/LangContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main\n  }\n}));\n\n\nexport default function BreadCrumbs({path}) {\n  const classes = useStyles();\n  const { literals } = useContext(LangContext)\n  const currentTitle = path[path.length - 1] ? path[path.length - 1]['title'] : \"Not Found\"\n\n  return (\n    <div className={classes.root}>\n      <Breadcrumbs maxItems={4} separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        <Link className={classes.link} color=\"inherit\" to=\"/\">\n          {literals.home}\n        </Link>\n        {path.slice(0, path.length -1).map(link => (\n          <Link className={classes.link} key={link.path} to={link.path}>\n            {link.title}\n          </Link>)\n        )}\n        <Typography color=\"textPrimary\">{currentTitle}</Typography>\n      </Breadcrumbs>\n    </div>\n  );\n}\n\nBreadCrumbs.defaultProps = {\n  path: [{}]\n};","import React, { useEffect, useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from '@material-ui/core/Grow';\n\nimport BreadCrumbs from \"./BreadCrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 9),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default function HeroUnit({ title, breadCrumbs }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <Grow in={checked} timeout={1000}>\n\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"md\">\n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            {title}\n          </Typography>\n          {/* <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          DESC. PLACEHOLDER\n        </Typography> */}\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <BreadCrumbs path={breadCrumbs} />\n            </Grid>\n          </div>\n        </Container>\n      </div>\n    </Grow>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport LangContext from \"../../utils/LangContext\";\nimport MainLayout from '../layouts/MainLayout';\nimport Cards from \"../components/Cards\"\nimport ContentWrapper from \"../components/ContentWrapper\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nimport SupportedLanguages from '../../utils/SupportedLanguages';\n\nfunction Navigator({ location, match }) {\n    const [module, setModule] = useState({})\n    const [breadCrumbs, setBreadCrumbs] = useState([])\n    const [notFound, setNotFound] = useState(false)\n    const [selectedLang, setSelectedLang] = useState(SupportedLanguages.en)\n    const { path, lang } = match.params\n\n    const parsePath = useCallback(\n        () => {\n            const pathlist = path ? path.split(\"/\") : []\n            const breadCrumbs = []\n            let currentModule = selectedLang\n            let breadcrumbpath = \"/\" + lang\n            for (let slug of pathlist) {\n                if(!currentModule.options){\n                    break\n                }\n                if (currentModule.options[slug]) {\n                    breadcrumbpath += \"/\" + slug\n                    breadCrumbs.push({title: currentModule.options[slug].title, path: breadcrumbpath})\n                    currentModule = currentModule.options[slug]\n                } else {\n                    setNotFound(true)\n                }\n            }\n            setBreadCrumbs(breadCrumbs)\n            setModule(currentModule)\n        },\n        [path, lang, selectedLang],\n    );\n\n    const selectLang = useCallback(\n        () => {\n            if(SupportedLanguages[lang]){\n                setSelectedLang(SupportedLanguages[lang])\n                setBreadCrumbs([{title: lang.title, path: \"/\" + lang}])\n            } else {\n                setNotFound(true)\n            }\n        },\n        [lang],\n    );\n\n    useEffect(() => {\n        selectLang();\n        parsePath();\n    }, [location.pathname, parsePath, selectLang]);\n\n    return (\n        <LangContext.Provider value={selectedLang}>\n            <MainLayout key={location.pathname}>\n                <HeroUnit title={module.title} breadCrumbs={breadCrumbs} />\n                <ContentWrapper sidebar=\"SIDEBAR\" main={module.content} />\n                <Cards options={module.options} />\n                {notFound ? <Redirect to=\"/404\" /> : null}\n            </MainLayout>\n        </LangContext.Provider>\n    )\n}\n\nexport default withRouter(Navigator)","import React, { useEffect, useState, useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grow from '@material-ui/core/Grow';\n\nimport LangContext from \"../../utils/LangContext\"\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 9),\n  },\n  welcome: {\n    marginBottom: \"0px\",\n  }\n}));\n\nexport default function LandingHeroUnit({ title, breadCrumbs }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n  const { literals } = useContext(LangContext)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <Grow in={checked} timeout={1000}>\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography\n            className={classes.welcome}\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            {literals.welcome}\n          </Typography>\n          <Typography\n            className={classes.chooseLang}\n            component=\"h2\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {literals.choose_lang}\n          </Typography>\n        </Container>\n      </div>\n    </Grow>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Container from \"@material-ui/core/Container\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport en from \"../../lang/en.json\";\n\nimport LangContext from \"../../utils/LangContext\";\n\nconst supportedLangs = [en]\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  link: {\n    textDecoration: \"none\"\n  }\n}));\n\nexport default function LangCards() {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    setChecked(true)\n  }, [setChecked])\n\n  return (\n    <LangContext.Provider value={en}>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n          {supportedLangs.map((lang, index) => (\n            <Grid item key={index} xs={12} sm={6} md={4}>\n              <Grow in={checked} timeout={1000}>\n                <CardActionArea>\n                  <Link className={classes.link} to={\"/\" + lang.slug}>\n                    <Card className={classes.card}>\n                      <CardMedia\n                        className={classes.cardMedia}\n                        image=\"https://via.placeholder.com/265x150.webp\"\n                        title=\"Image title\"\n                      />\n                      <CardContent className={classes.cardContent}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          {lang.title}\n                        </Typography>\n                        {/* <Typography>\n                          Description if there is one\n                        </Typography> */}\n                      </CardContent>\n                      <CardActions>\n                        <Typography color=\"primary\" component=\"p\">\n                          {lang.literals.choose}\n                        </Typography>\n                      </CardActions>\n                    </Card>\n                  </Link>\n\n                </CardActionArea>\n              </Grow>\n\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </LangContext.Provider>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport LandingHeroUnit from \"../components/LandingHeroUnit\";\nimport LangCards from \"../components/LangCards\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <MainLayout>\n      <LandingHeroUnit />\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n            <LangCards />\n        </Grid>\n      </Container>\n    </MainLayout>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport HeroUnit from \"../components/HeroUnit\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function NotFound(props) {\n  const classes = useStyles();\n\n  return (\n    <MainLayout>\n      <HeroUnit title=\"Page Not Found\" breadCrumbs={[{title: \"404\", path: \"/404\"}]} />\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n            Page Not Found\n        </Grid>\n      </Container>\n    </MainLayout>\n  );\n}\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport Navigator from './views/pages/Navigator'\nimport Home from './views/pages/Home'\nimport NotFound from './views/pages/NotFound'\n\nexport default function App() {\n    return (\n        <Router>\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/404\" component={NotFound} />\n                <Route path=\"/:lang/:path*\" component={Navigator} />\n            </Switch>\n        </Router>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0c9d4a\",\n    }\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}